{
	"id": "1d57b815bb4a89d06c86cfac54614928",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/StakeTB.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract StakeTB{\n    IERC20 _token;\n    mapping(address => stakeInfo) _addressToToken;\n    uint256 _rewardRatePerSecond = 1 * 10**16;\n\n\n    struct stakeInfo{\n        uint256 amount;\n        uint256 startTime;\n    }\n\n    constructor(address token) {\n        _token = IERC20(token);\n    }\n\n    function stake(uint256 amount) public {\n        stakeInfo memory oldInfo = _addressToToken[msg.sender];\n        if (oldInfo.amount > 0){\n            uint256 rewardAmount = calcReward(oldInfo);\n            _token.transfer(msg.sender, rewardAmount);\n        }\n        // emit event\n        _token.transferFrom(msg.sender, address(this), amount);\n        stakeInfo memory newInfo = stakeInfo(amount + oldInfo.amount, block.timestamp);\n        _addressToToken[msg.sender] = newInfo;\n    }\n\n    function harvest() public {\n        stakeInfo memory info = _addressToToken[msg.sender];\n        uint256 rewardAmount = calcReward(info);\n        _token.transfer(msg.sender, rewardAmount);\n    }\n\n    function calcReward(stakeInfo memory info) internal view returns(uint256){\n        return info.amount * _rewardRatePerSecond * (block.timestamp - info.startTime) / 60;\n    }\n\n    function unstake() public {\n        stakeInfo memory info = _addressToToken[msg.sender];\n        require(info.amount > 0, \"You haven't staked any coins yet.\");\n\n        _token.transfer(msg.sender, info.amount + calcReward(info));\n    }\n\n    function stakedAmount() public view returns(uint256){\n        return _addressToToken[msg.sender].amount;\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/StakeTB.sol": {
				"StakeTB": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "harvest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/StakeTB.sol\":117:1632  contract StakeTB{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/StakeTB.sol\":240:250  1 * 10**16 */\n  0x2386f26fc10000\n    /* \"contracts/StakeTB.sol\":209:250  uint256 _rewardRatePerSecond = 1 * 10**16 */\n  0x02\n  sstore\n    /* \"contracts/StakeTB.sol\":338:404  constructor(address token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/StakeTB.sol\":391:396  token */\n  dup1\n    /* \"contracts/StakeTB.sol\":375:381  _token */\n  0x00\n  dup1\n    /* \"contracts/StakeTB.sol\":375:397  _token = IERC20(token) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakeTB.sol\":338:404  constructor(address token) {... */\n  pop\n    /* \"contracts/StakeTB.sol\":117:1632  contract StakeTB{... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:507   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:362   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":281:360   */\n  tag_14\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":243:362   */\ntag_13:\n    /* \"#utility.yul\":401:402   */\n  0x00\n    /* \"#utility.yul\":426:490   */\n  tag_16\n    /* \"#utility.yul\":482:489   */\n  dup5\n    /* \"#utility.yul\":473:479   */\n  dup3\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":426:490   */\n  tag_8\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":416:490   */\n  swap2\n  pop\n    /* \"#utility.yul\":372:500   */\n  pop\n    /* \"#utility.yul\":156:507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":594:690   */\ntag_19:\n    /* \"#utility.yul\":631:638   */\n  0x00\n    /* \"#utility.yul\":660:684   */\n  tag_21\n    /* \"#utility.yul\":678:683   */\n  dup3\n    /* \"#utility.yul\":660:684   */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":649:684   */\n  swap1\n  pop\n    /* \"#utility.yul\":594:690   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:822   */\ntag_22:\n    /* \"#utility.yul\":733:740   */\n  0x00\n    /* \"#utility.yul\":773:815   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":766:771   */\n  dup3\n    /* \"#utility.yul\":762:816   */\n  and\n    /* \"#utility.yul\":751:816   */\n  swap1\n  pop\n    /* \"#utility.yul\":696:822   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":951:1068   */\ntag_15:\n    /* \"#utility.yul\":1060:1061   */\n  0x00\n    /* \"#utility.yul\":1057:1058   */\n  dup1\n    /* \"#utility.yul\":1050:1062   */\n  revert\n    /* \"#utility.yul\":1074:1196   */\ntag_11:\n    /* \"#utility.yul\":1147:1171   */\n  tag_28\n    /* \"#utility.yul\":1165:1170   */\n  dup2\n    /* \"#utility.yul\":1147:1171   */\n  tag_19\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":1140:1145   */\n  dup2\n    /* \"#utility.yul\":1137:1172   */\n  eq\n    /* \"#utility.yul\":1127:1190   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1186:1187   */\n  0x00\n    /* \"#utility.yul\":1183:1184   */\n  dup1\n    /* \"#utility.yul\":1176:1188   */\n  revert\n    /* \"#utility.yul\":1127:1190   */\ntag_29:\n    /* \"#utility.yul\":1074:1196   */\n  pop\n  jump\t// out\n    /* \"contracts/StakeTB.sol\":117:1632  contract StakeTB{... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/StakeTB.sol\":117:1632  contract StakeTB{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2def6620\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x373d6132\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4641257d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/StakeTB.sol\":1279:1514  function unstake() public {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/StakeTB.sol\":1520:1630  function stakedAmount() public view returns(uint256){... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakeTB.sol\":900:1094  function harvest() public {... */\n    tag_5:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"contracts/StakeTB.sol\":410:894  function stake(uint256 amount) public {... */\n    tag_6:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contracts/StakeTB.sol\":1279:1514  function unstake() public {... */\n    tag_8:\n        /* \"contracts/StakeTB.sol\":1315:1336  stakeInfo memory info */\n      0x00\n        /* \"contracts/StakeTB.sol\":1339:1354  _addressToToken */\n      0x01\n        /* \"contracts/StakeTB.sol\":1339:1366  _addressToToken[msg.sender] */\n      0x00\n        /* \"contracts/StakeTB.sol\":1355:1365  msg.sender */\n      caller\n        /* \"contracts/StakeTB.sol\":1339:1366  _addressToToken[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakeTB.sol\":1315:1366  stakeInfo memory info = _addressToToken[msg.sender] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/StakeTB.sol\":1398:1399  0 */\n      0x00\n        /* \"contracts/StakeTB.sol\":1384:1388  info */\n      dup2\n        /* \"contracts/StakeTB.sol\":1384:1395  info.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/StakeTB.sol\":1384:1399  info.amount > 0 */\n      gt\n        /* \"contracts/StakeTB.sol\":1376:1437  require(info.amount > 0, \"You haven't staked any coins yet.\") */\n      tag_20\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_21\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_20:\n        /* \"contracts/StakeTB.sol\":1448:1454  _token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakeTB.sol\":1448:1463  _token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/StakeTB.sol\":1464:1474  msg.sender */\n      caller\n        /* \"contracts/StakeTB.sol\":1490:1506  calcReward(info) */\n      tag_23\n        /* \"contracts/StakeTB.sol\":1501:1505  info */\n      dup5\n        /* \"contracts/StakeTB.sol\":1490:1500  calcReward */\n      tag_24\n        /* \"contracts/StakeTB.sol\":1490:1506  calcReward(info) */\n      jump\t// in\n    tag_23:\n        /* \"contracts/StakeTB.sol\":1476:1480  info */\n      dup5\n        /* \"contracts/StakeTB.sol\":1476:1487  info.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/StakeTB.sol\":1476:1506  info.amount + calcReward(info) */\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n        /* \"contracts/StakeTB.sol\":1448:1507  _token.transfer(msg.sender, info.amount + calcReward(info)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_27\n      swap3\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_31\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_31:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      pop\n        /* \"contracts/StakeTB.sol\":1305:1514  {... */\n      pop\n        /* \"contracts/StakeTB.sol\":1279:1514  function unstake() public {... */\n      jump\t// out\n        /* \"contracts/StakeTB.sol\":1520:1630  function stakedAmount() public view returns(uint256){... */\n    tag_10:\n        /* \"contracts/StakeTB.sol\":1564:1571  uint256 */\n      0x00\n        /* \"contracts/StakeTB.sol\":1589:1604  _addressToToken */\n      0x01\n        /* \"contracts/StakeTB.sol\":1589:1616  _addressToToken[msg.sender] */\n      0x00\n        /* \"contracts/StakeTB.sol\":1605:1615  msg.sender */\n      caller\n        /* \"contracts/StakeTB.sol\":1589:1616  _addressToToken[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakeTB.sol\":1589:1623  _addressToToken[msg.sender].amount */\n      0x00\n      add\n      sload\n        /* \"contracts/StakeTB.sol\":1582:1623  return _addressToToken[msg.sender].amount */\n      swap1\n      pop\n        /* \"contracts/StakeTB.sol\":1520:1630  function stakedAmount() public view returns(uint256){... */\n      swap1\n      jump\t// out\n        /* \"contracts/StakeTB.sol\":900:1094  function harvest() public {... */\n    tag_14:\n        /* \"contracts/StakeTB.sol\":936:957  stakeInfo memory info */\n      0x00\n        /* \"contracts/StakeTB.sol\":960:975  _addressToToken */\n      0x01\n        /* \"contracts/StakeTB.sol\":960:987  _addressToToken[msg.sender] */\n      0x00\n        /* \"contracts/StakeTB.sol\":976:986  msg.sender */\n      caller\n        /* \"contracts/StakeTB.sol\":960:987  _addressToToken[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakeTB.sol\":936:987  stakeInfo memory info = _addressToToken[msg.sender] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/StakeTB.sol\":997:1017  uint256 rewardAmount */\n      0x00\n        /* \"contracts/StakeTB.sol\":1020:1036  calcReward(info) */\n      tag_36\n        /* \"contracts/StakeTB.sol\":1031:1035  info */\n      dup3\n        /* \"contracts/StakeTB.sol\":1020:1030  calcReward */\n      tag_24\n        /* \"contracts/StakeTB.sol\":1020:1036  calcReward(info) */\n      jump\t// in\n    tag_36:\n        /* \"contracts/StakeTB.sol\":997:1036  uint256 rewardAmount = calcReward(info) */\n      swap1\n      pop\n        /* \"contracts/StakeTB.sol\":1046:1052  _token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakeTB.sol\":1046:1061  _token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/StakeTB.sol\":1062:1072  msg.sender */\n      caller\n        /* \"contracts/StakeTB.sol\":1074:1086  rewardAmount */\n      dup4\n        /* \"contracts/StakeTB.sol\":1046:1087  _token.transfer(msg.sender, rewardAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_37\n      swap3\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_37:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_40\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_40:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_41:\n      pop\n        /* \"contracts/StakeTB.sol\":926:1094  {... */\n      pop\n      pop\n        /* \"contracts/StakeTB.sol\":900:1094  function harvest() public {... */\n      jump\t// out\n        /* \"contracts/StakeTB.sol\":410:894  function stake(uint256 amount) public {... */\n    tag_18:\n        /* \"contracts/StakeTB.sol\":458:482  stakeInfo memory oldInfo */\n      0x00\n        /* \"contracts/StakeTB.sol\":485:500  _addressToToken */\n      0x01\n        /* \"contracts/StakeTB.sol\":485:512  _addressToToken[msg.sender] */\n      0x00\n        /* \"contracts/StakeTB.sol\":501:511  msg.sender */\n      caller\n        /* \"contracts/StakeTB.sol\":485:512  _addressToToken[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakeTB.sol\":458:512  stakeInfo memory oldInfo = _addressToToken[msg.sender] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/StakeTB.sol\":543:544  0 */\n      0x00\n        /* \"contracts/StakeTB.sol\":526:533  oldInfo */\n      dup2\n        /* \"contracts/StakeTB.sol\":526:540  oldInfo.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/StakeTB.sol\":526:544  oldInfo.amount > 0 */\n      gt\n        /* \"contracts/StakeTB.sol\":522:667  if (oldInfo.amount > 0){... */\n      iszero\n      tag_43\n      jumpi\n        /* \"contracts/StakeTB.sol\":559:579  uint256 rewardAmount */\n      0x00\n        /* \"contracts/StakeTB.sol\":582:601  calcReward(oldInfo) */\n      tag_44\n        /* \"contracts/StakeTB.sol\":593:600  oldInfo */\n      dup3\n        /* \"contracts/StakeTB.sol\":582:592  calcReward */\n      tag_24\n        /* \"contracts/StakeTB.sol\":582:601  calcReward(oldInfo) */\n      jump\t// in\n    tag_44:\n        /* \"contracts/StakeTB.sol\":559:601  uint256 rewardAmount = calcReward(oldInfo) */\n      swap1\n      pop\n        /* \"contracts/StakeTB.sol\":615:621  _token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakeTB.sol\":615:630  _token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/StakeTB.sol\":631:641  msg.sender */\n      caller\n        /* \"contracts/StakeTB.sol\":643:655  rewardAmount */\n      dup4\n        /* \"contracts/StakeTB.sol\":615:656  _token.transfer(msg.sender, rewardAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_45\n      swap3\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_45:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_48\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_48:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_49:\n      pop\n        /* \"contracts/StakeTB.sol\":545:667  {... */\n      pop\n        /* \"contracts/StakeTB.sol\":522:667  if (oldInfo.amount > 0){... */\n    tag_43:\n        /* \"contracts/StakeTB.sol\":698:704  _token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakeTB.sol\":698:717  _token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/StakeTB.sol\":718:728  msg.sender */\n      caller\n        /* \"contracts/StakeTB.sol\":738:742  this */\n      address\n        /* \"contracts/StakeTB.sol\":745:751  amount */\n      dup6\n        /* \"contracts/StakeTB.sol\":698:752  _token.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_54\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_54:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_55:\n      pop\n        /* \"contracts/StakeTB.sol\":762:786  stakeInfo memory newInfo */\n      0x00\n        /* \"contracts/StakeTB.sol\":789:840  stakeInfo(amount + oldInfo.amount, block.timestamp) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/StakeTB.sol\":808:815  oldInfo */\n      dup4\n        /* \"contracts/StakeTB.sol\":808:822  oldInfo.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/StakeTB.sol\":799:805  amount */\n      dup6\n        /* \"contracts/StakeTB.sol\":799:822  amount + oldInfo.amount */\n      tag_56\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_56:\n        /* \"contracts/StakeTB.sol\":789:840  stakeInfo(amount + oldInfo.amount, block.timestamp) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/StakeTB.sol\":824:839  block.timestamp */\n      timestamp\n        /* \"contracts/StakeTB.sol\":789:840  stakeInfo(amount + oldInfo.amount, block.timestamp) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/StakeTB.sol\":762:840  stakeInfo memory newInfo = stakeInfo(amount + oldInfo.amount, block.timestamp) */\n      swap1\n      pop\n        /* \"contracts/StakeTB.sol\":880:887  newInfo */\n      dup1\n        /* \"contracts/StakeTB.sol\":850:865  _addressToToken */\n      0x01\n        /* \"contracts/StakeTB.sol\":850:877  _addressToToken[msg.sender] */\n      0x00\n        /* \"contracts/StakeTB.sol\":866:876  msg.sender */\n      caller\n        /* \"contracts/StakeTB.sol\":850:877  _addressToToken[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakeTB.sol\":850:887  _addressToToken[msg.sender] = newInfo */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/StakeTB.sol\":448:894  {... */\n      pop\n      pop\n        /* \"contracts/StakeTB.sol\":410:894  function stake(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/StakeTB.sol\":1100:1273  function calcReward(stakeInfo memory info) internal view returns(uint256){... */\n    tag_24:\n        /* \"contracts/StakeTB.sol\":1165:1172  uint256 */\n      0x00\n        /* \"contracts/StakeTB.sol\":1264:1266  60 */\n      0x3c\n        /* \"contracts/StakeTB.sol\":1246:1250  info */\n      dup3\n        /* \"contracts/StakeTB.sol\":1246:1260  info.startTime */\n      0x20\n      add\n      mload\n        /* \"contracts/StakeTB.sol\":1228:1243  block.timestamp */\n      timestamp\n        /* \"contracts/StakeTB.sol\":1228:1260  block.timestamp - info.startTime */\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"contracts/StakeTB.sol\":1204:1224  _rewardRatePerSecond */\n      sload(0x02)\n        /* \"contracts/StakeTB.sol\":1190:1194  info */\n      dup5\n        /* \"contracts/StakeTB.sol\":1190:1201  info.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/StakeTB.sol\":1190:1224  info.amount * _rewardRatePerSecond */\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"contracts/StakeTB.sol\":1190:1261  info.amount * _rewardRatePerSecond * (block.timestamp - info.startTime) */\n      tag_62\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_62:\n        /* \"contracts/StakeTB.sol\":1190:1266  info.amount * _rewardRatePerSecond * (block.timestamp - info.startTime) / 60 */\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n        /* \"contracts/StakeTB.sol\":1183:1266  return info.amount * _rewardRatePerSecond * (block.timestamp - info.startTime) / 60 */\n      swap1\n      pop\n        /* \"contracts/StakeTB.sol\":1100:1273  function calcReward(stakeInfo memory info) internal view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:144   */\n    tag_66:\n        /* \"#utility.yul\":61:66   */\n      0x00\n        /* \"#utility.yul\":92:98   */\n      dup2\n        /* \"#utility.yul\":86:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":108:138   */\n      tag_68\n        /* \"#utility.yul\":132:137   */\n      dup2\n        /* \"#utility.yul\":108:138   */\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":7:144   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:289   */\n    tag_70:\n        /* \"#utility.yul\":196:201   */\n      0x00\n        /* \"#utility.yul\":234:240   */\n      dup2\n        /* \"#utility.yul\":221:241   */\n      calldataload\n        /* \"#utility.yul\":212:241   */\n      swap1\n      pop\n        /* \"#utility.yul\":250:283   */\n      tag_72\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":250:283   */\n      tag_73\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":150:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:640   */\n    tag_33:\n        /* \"#utility.yul\":362:368   */\n      0x00\n        /* \"#utility.yul\":411:413   */\n      0x20\n        /* \"#utility.yul\":399:408   */\n      dup3\n        /* \"#utility.yul\":390:397   */\n      dup5\n        /* \"#utility.yul\":386:409   */\n      sub\n        /* \"#utility.yul\":382:414   */\n      slt\n        /* \"#utility.yul\":379:498   */\n      iszero\n      tag_75\n      jumpi\n        /* \"#utility.yul\":417:496   */\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":379:498   */\n    tag_75:\n        /* \"#utility.yul\":537:538   */\n      0x00\n        /* \"#utility.yul\":562:623   */\n      tag_78\n        /* \"#utility.yul\":615:622   */\n      dup5\n        /* \"#utility.yul\":606:612   */\n      dup3\n        /* \"#utility.yul\":595:604   */\n      dup6\n        /* \"#utility.yul\":591:613   */\n      add\n        /* \"#utility.yul\":562:623   */\n      tag_66\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":552:623   */\n      swap2\n      pop\n        /* \"#utility.yul\":508:633   */\n      pop\n        /* \"#utility.yul\":295:640   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":646:975   */\n    tag_17:\n        /* \"#utility.yul\":705:711   */\n      0x00\n        /* \"#utility.yul\":754:756   */\n      0x20\n        /* \"#utility.yul\":742:751   */\n      dup3\n        /* \"#utility.yul\":733:740   */\n      dup5\n        /* \"#utility.yul\":729:752   */\n      sub\n        /* \"#utility.yul\":725:757   */\n      slt\n        /* \"#utility.yul\":722:841   */\n      iszero\n      tag_80\n      jumpi\n        /* \"#utility.yul\":760:839   */\n      tag_81\n      tag_77\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":722:841   */\n    tag_80:\n        /* \"#utility.yul\":880:881   */\n      0x00\n        /* \"#utility.yul\":905:958   */\n      tag_82\n        /* \"#utility.yul\":950:957   */\n      dup5\n        /* \"#utility.yul\":941:947   */\n      dup3\n        /* \"#utility.yul\":930:939   */\n      dup6\n        /* \"#utility.yul\":926:948   */\n      add\n        /* \"#utility.yul\":905:958   */\n      tag_70\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":895:958   */\n      swap2\n      pop\n        /* \"#utility.yul\":851:968   */\n      pop\n        /* \"#utility.yul\":646:975   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":981:1099   */\n    tag_83:\n        /* \"#utility.yul\":1068:1092   */\n      tag_85\n        /* \"#utility.yul\":1086:1091   */\n      dup2\n        /* \"#utility.yul\":1068:1092   */\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":1063:1066   */\n      dup3\n        /* \"#utility.yul\":1056:1093   */\n      mstore\n        /* \"#utility.yul\":981:1099   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1105:1471   */\n    tag_87:\n        /* \"#utility.yul\":1247:1250   */\n      0x00\n        /* \"#utility.yul\":1268:1335   */\n      tag_89\n        /* \"#utility.yul\":1332:1334   */\n      0x21\n        /* \"#utility.yul\":1327:1330   */\n      dup4\n        /* \"#utility.yul\":1268:1335   */\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":1261:1335   */\n      swap2\n      pop\n        /* \"#utility.yul\":1344:1437   */\n      tag_91\n        /* \"#utility.yul\":1433:1436   */\n      dup3\n        /* \"#utility.yul\":1344:1437   */\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":1462:1464   */\n      0x40\n        /* \"#utility.yul\":1457:1460   */\n      dup3\n        /* \"#utility.yul\":1453:1465   */\n      add\n        /* \"#utility.yul\":1446:1465   */\n      swap1\n      pop\n        /* \"#utility.yul\":1105:1471   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1477:1595   */\n    tag_93:\n        /* \"#utility.yul\":1564:1588   */\n      tag_95\n        /* \"#utility.yul\":1582:1587   */\n      dup2\n        /* \"#utility.yul\":1564:1588   */\n      tag_96\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":1559:1562   */\n      dup3\n        /* \"#utility.yul\":1552:1589   */\n      mstore\n        /* \"#utility.yul\":1477:1595   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:2043   */\n    tag_51:\n        /* \"#utility.yul\":1750:1754   */\n      0x00\n        /* \"#utility.yul\":1788:1790   */\n      0x60\n        /* \"#utility.yul\":1777:1786   */\n      dup3\n        /* \"#utility.yul\":1773:1791   */\n      add\n        /* \"#utility.yul\":1765:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1801:1872   */\n      tag_98\n        /* \"#utility.yul\":1869:1870   */\n      0x00\n        /* \"#utility.yul\":1858:1867   */\n      dup4\n        /* \"#utility.yul\":1854:1871   */\n      add\n        /* \"#utility.yul\":1845:1851   */\n      dup7\n        /* \"#utility.yul\":1801:1872   */\n      tag_83\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":1882:1954   */\n      tag_99\n        /* \"#utility.yul\":1950:1952   */\n      0x20\n        /* \"#utility.yul\":1939:1948   */\n      dup4\n        /* \"#utility.yul\":1935:1953   */\n      add\n        /* \"#utility.yul\":1926:1932   */\n      dup6\n        /* \"#utility.yul\":1882:1954   */\n      tag_83\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":1964:2036   */\n      tag_100\n        /* \"#utility.yul\":2032:2034   */\n      0x40\n        /* \"#utility.yul\":2021:2030   */\n      dup4\n        /* \"#utility.yul\":2017:2035   */\n      add\n        /* \"#utility.yul\":2008:2014   */\n      dup5\n        /* \"#utility.yul\":1964:2036   */\n      tag_93\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":1601:2043   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2049:2381   */\n    tag_28:\n        /* \"#utility.yul\":2170:2174   */\n      0x00\n        /* \"#utility.yul\":2208:2210   */\n      0x40\n        /* \"#utility.yul\":2197:2206   */\n      dup3\n        /* \"#utility.yul\":2193:2211   */\n      add\n        /* \"#utility.yul\":2185:2211   */\n      swap1\n      pop\n        /* \"#utility.yul\":2221:2292   */\n      tag_102\n        /* \"#utility.yul\":2289:2290   */\n      0x00\n        /* \"#utility.yul\":2278:2287   */\n      dup4\n        /* \"#utility.yul\":2274:2291   */\n      add\n        /* \"#utility.yul\":2265:2271   */\n      dup6\n        /* \"#utility.yul\":2221:2292   */\n      tag_83\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":2302:2374   */\n      tag_103\n        /* \"#utility.yul\":2370:2372   */\n      0x20\n        /* \"#utility.yul\":2359:2368   */\n      dup4\n        /* \"#utility.yul\":2355:2373   */\n      add\n        /* \"#utility.yul\":2346:2352   */\n      dup5\n        /* \"#utility.yul\":2302:2374   */\n      tag_93\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":2049:2381   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2387:2806   */\n    tag_22:\n        /* \"#utility.yul\":2553:2557   */\n      0x00\n        /* \"#utility.yul\":2591:2593   */\n      0x20\n        /* \"#utility.yul\":2580:2589   */\n      dup3\n        /* \"#utility.yul\":2576:2594   */\n      add\n        /* \"#utility.yul\":2568:2594   */\n      swap1\n      pop\n        /* \"#utility.yul\":2640:2649   */\n      dup2\n        /* \"#utility.yul\":2634:2638   */\n      dup2\n        /* \"#utility.yul\":2630:2650   */\n      sub\n        /* \"#utility.yul\":2626:2627   */\n      0x00\n        /* \"#utility.yul\":2615:2624   */\n      dup4\n        /* \"#utility.yul\":2611:2628   */\n      add\n        /* \"#utility.yul\":2604:2651   */\n      mstore\n        /* \"#utility.yul\":2668:2799   */\n      tag_105\n        /* \"#utility.yul\":2794:2798   */\n      dup2\n        /* \"#utility.yul\":2668:2799   */\n      tag_87\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":2660:2799   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2806   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2812:3034   */\n    tag_12:\n        /* \"#utility.yul\":2905:2909   */\n      0x00\n        /* \"#utility.yul\":2943:2945   */\n      0x20\n        /* \"#utility.yul\":2932:2941   */\n      dup3\n        /* \"#utility.yul\":2928:2946   */\n      add\n        /* \"#utility.yul\":2920:2946   */\n      swap1\n      pop\n        /* \"#utility.yul\":2956:3027   */\n      tag_107\n        /* \"#utility.yul\":3024:3025   */\n      0x00\n        /* \"#utility.yul\":3013:3022   */\n      dup4\n        /* \"#utility.yul\":3009:3026   */\n      add\n        /* \"#utility.yul\":3000:3006   */\n      dup5\n        /* \"#utility.yul\":2956:3027   */\n      tag_93\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":2812:3034   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3121:3290   */\n    tag_90:\n        /* \"#utility.yul\":3205:3216   */\n      0x00\n        /* \"#utility.yul\":3239:3245   */\n      dup3\n        /* \"#utility.yul\":3234:3237   */\n      dup3\n        /* \"#utility.yul\":3227:3246   */\n      mstore\n        /* \"#utility.yul\":3279:3283   */\n      0x20\n        /* \"#utility.yul\":3274:3277   */\n      dup3\n        /* \"#utility.yul\":3270:3284   */\n      add\n        /* \"#utility.yul\":3255:3284   */\n      swap1\n      pop\n        /* \"#utility.yul\":3121:3290   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3296:3601   */\n    tag_26:\n        /* \"#utility.yul\":3336:3339   */\n      0x00\n        /* \"#utility.yul\":3355:3375   */\n      tag_112\n        /* \"#utility.yul\":3373:3374   */\n      dup3\n        /* \"#utility.yul\":3355:3375   */\n      tag_96\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":3350:3375   */\n      swap2\n      pop\n        /* \"#utility.yul\":3389:3409   */\n      tag_113\n        /* \"#utility.yul\":3407:3408   */\n      dup4\n        /* \"#utility.yul\":3389:3409   */\n      tag_96\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":3384:3409   */\n      swap3\n      pop\n        /* \"#utility.yul\":3543:3544   */\n      dup3\n        /* \"#utility.yul\":3475:3541   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3471:3545   */\n      sub\n        /* \"#utility.yul\":3468:3469   */\n      dup3\n        /* \"#utility.yul\":3465:3546   */\n      gt\n        /* \"#utility.yul\":3462:3569   */\n      iszero\n      tag_114\n      jumpi\n        /* \"#utility.yul\":3549:3567   */\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":3462:3569   */\n    tag_114:\n        /* \"#utility.yul\":3593:3594   */\n      dup3\n        /* \"#utility.yul\":3590:3591   */\n      dup3\n        /* \"#utility.yul\":3586:3595   */\n      add\n        /* \"#utility.yul\":3579:3595   */\n      swap1\n      pop\n        /* \"#utility.yul\":3296:3601   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3607:3792   */\n    tag_64:\n        /* \"#utility.yul\":3647:3648   */\n      0x00\n        /* \"#utility.yul\":3664:3684   */\n      tag_118\n        /* \"#utility.yul\":3682:3683   */\n      dup3\n        /* \"#utility.yul\":3664:3684   */\n      tag_96\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":3659:3684   */\n      swap2\n      pop\n        /* \"#utility.yul\":3698:3718   */\n      tag_119\n        /* \"#utility.yul\":3716:3717   */\n      dup4\n        /* \"#utility.yul\":3698:3718   */\n      tag_96\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":3693:3718   */\n      swap3\n      pop\n        /* \"#utility.yul\":3737:3738   */\n      dup3\n        /* \"#utility.yul\":3727:3762   */\n      tag_120\n      jumpi\n        /* \"#utility.yul\":3742:3760   */\n      tag_121\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":3727:3762   */\n    tag_120:\n        /* \"#utility.yul\":3784:3785   */\n      dup3\n        /* \"#utility.yul\":3781:3782   */\n      dup3\n        /* \"#utility.yul\":3777:3786   */\n      div\n        /* \"#utility.yul\":3772:3786   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4146   */\n    tag_61:\n        /* \"#utility.yul\":3838:3845   */\n      0x00\n        /* \"#utility.yul\":3861:3881   */\n      tag_124\n        /* \"#utility.yul\":3879:3880   */\n      dup3\n        /* \"#utility.yul\":3861:3881   */\n      tag_96\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":3856:3881   */\n      swap2\n      pop\n        /* \"#utility.yul\":3895:3915   */\n      tag_125\n        /* \"#utility.yul\":3913:3914   */\n      dup4\n        /* \"#utility.yul\":3895:3915   */\n      tag_96\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":3890:3915   */\n      swap3\n      pop\n        /* \"#utility.yul\":4083:4084   */\n      dup2\n        /* \"#utility.yul\":4015:4081   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4011:4085   */\n      div\n        /* \"#utility.yul\":4008:4009   */\n      dup4\n        /* \"#utility.yul\":4005:4086   */\n      gt\n        /* \"#utility.yul\":4000:4001   */\n      dup3\n        /* \"#utility.yul\":3993:4002   */\n      iszero\n        /* \"#utility.yul\":3986:4003   */\n      iszero\n        /* \"#utility.yul\":3982:4087   */\n      and\n        /* \"#utility.yul\":3979:4110   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":4090:4108   */\n      tag_127\n      tag_116\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":3979:4110   */\n    tag_126:\n        /* \"#utility.yul\":4138:4139   */\n      dup3\n        /* \"#utility.yul\":4135:4136   */\n      dup3\n        /* \"#utility.yul\":4131:4140   */\n      mul\n        /* \"#utility.yul\":4120:4140   */\n      swap1\n      pop\n        /* \"#utility.yul\":3798:4146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4152:4343   */\n    tag_59:\n        /* \"#utility.yul\":4192:4196   */\n      0x00\n        /* \"#utility.yul\":4212:4232   */\n      tag_129\n        /* \"#utility.yul\":4230:4231   */\n      dup3\n        /* \"#utility.yul\":4212:4232   */\n      tag_96\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":4207:4232   */\n      swap2\n      pop\n        /* \"#utility.yul\":4246:4266   */\n      tag_130\n        /* \"#utility.yul\":4264:4265   */\n      dup4\n        /* \"#utility.yul\":4246:4266   */\n      tag_96\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":4241:4266   */\n      swap3\n      pop\n        /* \"#utility.yul\":4285:4286   */\n      dup3\n        /* \"#utility.yul\":4282:4283   */\n      dup3\n        /* \"#utility.yul\":4279:4287   */\n      lt\n        /* \"#utility.yul\":4276:4310   */\n      iszero\n      tag_131\n      jumpi\n        /* \"#utility.yul\":4290:4308   */\n      tag_132\n      tag_116\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":4276:4310   */\n    tag_131:\n        /* \"#utility.yul\":4335:4336   */\n      dup3\n        /* \"#utility.yul\":4332:4333   */\n      dup3\n        /* \"#utility.yul\":4328:4337   */\n      sub\n        /* \"#utility.yul\":4320:4337   */\n      swap1\n      pop\n        /* \"#utility.yul\":4152:4343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4349:4445   */\n    tag_86:\n        /* \"#utility.yul\":4386:4393   */\n      0x00\n        /* \"#utility.yul\":4415:4439   */\n      tag_134\n        /* \"#utility.yul\":4433:4438   */\n      dup3\n        /* \"#utility.yul\":4415:4439   */\n      tag_135\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":4404:4439   */\n      swap1\n      pop\n        /* \"#utility.yul\":4349:4445   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4451:4541   */\n    tag_136:\n        /* \"#utility.yul\":4485:4492   */\n      0x00\n        /* \"#utility.yul\":4528:4533   */\n      dup2\n        /* \"#utility.yul\":4521:4534   */\n      iszero\n        /* \"#utility.yul\":4514:4535   */\n      iszero\n        /* \"#utility.yul\":4503:4535   */\n      swap1\n      pop\n        /* \"#utility.yul\":4451:4541   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4547:4673   */\n    tag_135:\n        /* \"#utility.yul\":4584:4591   */\n      0x00\n        /* \"#utility.yul\":4624:4666   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4617:4622   */\n      dup3\n        /* \"#utility.yul\":4613:4667   */\n      and\n        /* \"#utility.yul\":4602:4667   */\n      swap1\n      pop\n        /* \"#utility.yul\":4547:4673   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4679:4756   */\n    tag_96:\n        /* \"#utility.yul\":4716:4723   */\n      0x00\n        /* \"#utility.yul\":4745:4750   */\n      dup2\n        /* \"#utility.yul\":4734:4750   */\n      swap1\n      pop\n        /* \"#utility.yul\":4679:4756   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4762:4942   */\n    tag_116:\n        /* \"#utility.yul\":4810:4887   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4807:4808   */\n      0x00\n        /* \"#utility.yul\":4800:4888   */\n      mstore\n        /* \"#utility.yul\":4907:4911   */\n      0x11\n        /* \"#utility.yul\":4904:4905   */\n      0x04\n        /* \"#utility.yul\":4897:4912   */\n      mstore\n        /* \"#utility.yul\":4931:4935   */\n      0x24\n        /* \"#utility.yul\":4928:4929   */\n      0x00\n        /* \"#utility.yul\":4921:4936   */\n      revert\n        /* \"#utility.yul\":4948:5128   */\n    tag_122:\n        /* \"#utility.yul\":4996:5073   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4993:4994   */\n      0x00\n        /* \"#utility.yul\":4986:5074   */\n      mstore\n        /* \"#utility.yul\":5093:5097   */\n      0x12\n        /* \"#utility.yul\":5090:5091   */\n      0x04\n        /* \"#utility.yul\":5083:5098   */\n      mstore\n        /* \"#utility.yul\":5117:5121   */\n      0x24\n        /* \"#utility.yul\":5114:5115   */\n      0x00\n        /* \"#utility.yul\":5107:5122   */\n      revert\n        /* \"#utility.yul\":5257:5374   */\n    tag_77:\n        /* \"#utility.yul\":5366:5367   */\n      0x00\n        /* \"#utility.yul\":5363:5364   */\n      dup1\n        /* \"#utility.yul\":5356:5368   */\n      revert\n        /* \"#utility.yul\":5380:5600   */\n    tag_92:\n        /* \"#utility.yul\":5520:5554   */\n      0x596f7520686176656e2774207374616b656420616e7920636f696e7320796574\n        /* \"#utility.yul\":5516:5517   */\n      0x00\n        /* \"#utility.yul\":5508:5514   */\n      dup3\n        /* \"#utility.yul\":5504:5518   */\n      add\n        /* \"#utility.yul\":5497:5555   */\n      mstore\n        /* \"#utility.yul\":5589:5592   */\n      0x2e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5584:5586   */\n      0x20\n        /* \"#utility.yul\":5576:5582   */\n      dup3\n        /* \"#utility.yul\":5572:5587   */\n      add\n        /* \"#utility.yul\":5565:5593   */\n      mstore\n        /* \"#utility.yul\":5380:5600   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5606:5722   */\n    tag_69:\n        /* \"#utility.yul\":5676:5697   */\n      tag_147\n        /* \"#utility.yul\":5691:5696   */\n      dup2\n        /* \"#utility.yul\":5676:5697   */\n      tag_136\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":5669:5674   */\n      dup2\n        /* \"#utility.yul\":5666:5698   */\n      eq\n        /* \"#utility.yul\":5656:5716   */\n      tag_148\n      jumpi\n        /* \"#utility.yul\":5712:5713   */\n      0x00\n        /* \"#utility.yul\":5709:5710   */\n      dup1\n        /* \"#utility.yul\":5702:5714   */\n      revert\n        /* \"#utility.yul\":5656:5716   */\n    tag_148:\n        /* \"#utility.yul\":5606:5722   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5728:5850   */\n    tag_73:\n        /* \"#utility.yul\":5801:5825   */\n      tag_150\n        /* \"#utility.yul\":5819:5824   */\n      dup2\n        /* \"#utility.yul\":5801:5825   */\n      tag_96\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":5794:5799   */\n      dup2\n        /* \"#utility.yul\":5791:5826   */\n      eq\n        /* \"#utility.yul\":5781:5844   */\n      tag_151\n      jumpi\n        /* \"#utility.yul\":5840:5841   */\n      0x00\n        /* \"#utility.yul\":5837:5838   */\n      dup1\n        /* \"#utility.yul\":5830:5842   */\n      revert\n        /* \"#utility.yul\":5781:5844   */\n    tag_151:\n        /* \"#utility.yul\":5728:5850   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202ed89f1ac4290b59a033057a900aa5298b530b904e2d1fd0b7db08478082f61964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_112": {
									"entryPoint": null,
									"id": 112,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 247,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:2",
														"type": ""
													}
												],
												"src": "7:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "281:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:2"
															},
															"nodeType": "YulIf",
															"src": "243:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "372:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "387:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "391:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "416:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "462:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "473:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "482:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "426:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "416:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:2",
														"type": ""
													}
												],
												"src": "156:351:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "553:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "563:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "573:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "546:6:2",
														"type": ""
													}
												],
												"src": "513:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "639:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "649:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "678:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "660:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "649:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "621:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "631:7:2",
														"type": ""
													}
												],
												"src": "594:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "751:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "766:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "773:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "751:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "723:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "733:7:2",
														"type": ""
													}
												],
												"src": "696:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "934:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "927:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "828:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1040:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1057:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1060:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1050:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1050:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1050:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "951:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1117:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1174:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1183:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1186:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1176:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1176:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1176:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1140:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1165:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1147:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1137:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1137:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1130:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:43:2"
															},
															"nodeType": "YulIf",
															"src": "1127:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1110:5:2",
														"type": ""
													}
												],
												"src": "1074:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052662386f26fc1000060025534801561001b57600080fd5b50604051610b22380380610b22833981810160405281019061003d9190610098565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610113565b600081519050610092816100fc565b92915050565b6000602082840312156100ae576100ad6100f7565b5b60006100bc84828501610083565b91505092915050565b60006100d0826100d7565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610105816100c5565b811461011057600080fd5b50565b610a00806101226000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632def662014610051578063373d61321461005b5780634641257d14610079578063a694fc3a14610083575b600080fd5b61005961009f565b005b610063610210565b6040516100709190610761565b60405180910390f35b61008161025a565b005b61009d60048036038101906100989190610673565b61037b565b005b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090506000816000015111610148576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013f90610741565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3361018e846105db565b846000015161019d919061078d565b6040518363ffffffff1660e01b81526004016101ba929190610718565b602060405180830381600087803b1580156101d457600080fd5b505af11580156101e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020c9190610646565b5050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050905060006102c7826105db565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610324929190610718565b602060405180830381600087803b15801561033e57600080fd5b505af1158015610352573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103769190610646565b505050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090506000816000015111156104a75760006103f5826105db565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610452929190610718565b602060405180830381600087803b15801561046c57600080fd5b505af1158015610480573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a49190610646565b50505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610504939291906106e1565b602060405180830381600087803b15801561051e57600080fd5b505af1158015610532573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105569190610646565b5060006040518060400160405280836000015185610574919061078d565b815260200142815250905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155905050505050565b6000603c8260200151426105ef919061086e565b60025484600001516106019190610814565b61060b9190610814565b61061591906107e3565b9050919050565b60008151905061062b8161099c565b92915050565b600081359050610640816109b3565b92915050565b60006020828403121561065c5761065b610948565b5b600061066a8482850161061c565b91505092915050565b60006020828403121561068957610688610948565b5b600061069784828501610631565b91505092915050565b6106a9816108a2565b82525050565b60006106bc60218361077c565b91506106c78261094d565b604082019050919050565b6106db816108e0565b82525050565b60006060820190506106f660008301866106a0565b61070360208301856106a0565b61071060408301846106d2565b949350505050565b600060408201905061072d60008301856106a0565b61073a60208301846106d2565b9392505050565b6000602082019050818103600083015261075a816106af565b9050919050565b600060208201905061077660008301846106d2565b92915050565b600082825260208201905092915050565b6000610798826108e0565b91506107a3836108e0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156107d8576107d76108ea565b5b828201905092915050565b60006107ee826108e0565b91506107f9836108e0565b92508261080957610808610919565b5b828204905092915050565b600061081f826108e0565b915061082a836108e0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610863576108626108ea565b5b828202905092915050565b6000610879826108e0565b9150610884836108e0565b925082821015610897576108966108ea565b5b828203905092915050565b60006108ad826108c0565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f596f7520686176656e2774207374616b656420616e7920636f696e732079657460008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b6109a5816108b4565b81146109b057600080fd5b50565b6109bc816108e0565b81146109c757600080fd5b5056fea26469706673582212202ed89f1ac4290b59a033057a900aa5298b530b904e2d1fd0b7db08478082f61964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH7 0x2386F26FC10000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xB22 CODESIZE SUB DUP1 PUSH2 0xB22 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x3D SWAP2 SWAP1 PUSH2 0x98 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x113 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x92 DUP2 PUSH2 0xFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAE JUMPI PUSH2 0xAD PUSH2 0xF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBC DUP5 DUP3 DUP6 ADD PUSH2 0x83 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD0 DUP3 PUSH2 0xD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x105 DUP2 PUSH2 0xC5 JUMP JUMPDEST DUP2 EQ PUSH2 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xA00 DUP1 PUSH2 0x122 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2DEF6620 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x373D6132 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x83 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x9F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x63 PUSH2 0x210 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x81 PUSH2 0x25A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x98 SWAP2 SWAP1 PUSH2 0x673 JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT PUSH2 0x148 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F SWAP1 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH2 0x18E DUP5 PUSH2 0x5DB JUMP JUMPDEST DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x78D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BA SWAP3 SWAP2 SWAP1 PUSH2 0x718 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x646 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x2C7 DUP3 PUSH2 0x5DB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x324 SWAP3 SWAP2 SWAP1 PUSH2 0x718 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x352 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x646 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x0 PUSH2 0x3F5 DUP3 PUSH2 0x5DB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x452 SWAP3 SWAP2 SWAP1 PUSH2 0x718 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x480 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A4 SWAP2 SWAP1 PUSH2 0x646 JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x504 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x51E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x532 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x556 SWAP2 SWAP1 PUSH2 0x646 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH1 0x0 ADD MLOAD DUP6 PUSH2 0x574 SWAP2 SWAP1 PUSH2 0x78D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3C DUP3 PUSH1 0x20 ADD MLOAD TIMESTAMP PUSH2 0x5EF SWAP2 SWAP1 PUSH2 0x86E JUMP JUMPDEST PUSH1 0x2 SLOAD DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x601 SWAP2 SWAP1 PUSH2 0x814 JUMP JUMPDEST PUSH2 0x60B SWAP2 SWAP1 PUSH2 0x814 JUMP JUMPDEST PUSH2 0x615 SWAP2 SWAP1 PUSH2 0x7E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x62B DUP2 PUSH2 0x99C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x640 DUP2 PUSH2 0x9B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x65C JUMPI PUSH2 0x65B PUSH2 0x948 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x66A DUP5 DUP3 DUP6 ADD PUSH2 0x61C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x689 JUMPI PUSH2 0x688 PUSH2 0x948 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x697 DUP5 DUP3 DUP6 ADD PUSH2 0x631 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6A9 DUP2 PUSH2 0x8A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6BC PUSH1 0x21 DUP4 PUSH2 0x77C JUMP JUMPDEST SWAP2 POP PUSH2 0x6C7 DUP3 PUSH2 0x94D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6DB DUP2 PUSH2 0x8E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x6F6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x6A0 JUMP JUMPDEST PUSH2 0x703 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x6A0 JUMP JUMPDEST PUSH2 0x710 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x6D2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x72D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x6A0 JUMP JUMPDEST PUSH2 0x73A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6D2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x75A DUP2 PUSH2 0x6AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x776 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x798 DUP3 PUSH2 0x8E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x7A3 DUP4 PUSH2 0x8E0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x7D8 JUMPI PUSH2 0x7D7 PUSH2 0x8EA JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EE DUP3 PUSH2 0x8E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x7F9 DUP4 PUSH2 0x8E0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x809 JUMPI PUSH2 0x808 PUSH2 0x919 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x81F DUP3 PUSH2 0x8E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x82A DUP4 PUSH2 0x8E0 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x863 JUMPI PUSH2 0x862 PUSH2 0x8EA JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x879 DUP3 PUSH2 0x8E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x884 DUP4 PUSH2 0x8E0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x897 JUMPI PUSH2 0x896 PUSH2 0x8EA JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8AD DUP3 PUSH2 0x8C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x596F7520686176656E2774207374616B656420616E7920636F696E7320796574 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x9A5 DUP2 PUSH2 0x8B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x9B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x9BC DUP2 PUSH2 0x8E0 JUMP JUMPDEST DUP2 EQ PUSH2 0x9C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0xD8 SWAP16 BYTE 0xC4 0x29 SIGNEXTEND MSIZE LOG0 CALLER SDIV PUSH27 0x900AA5298B530B904E2D1FD0B7DB08478082F61964736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "117:1515:1:-:0;;;240:10;209:41;;338:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;391:5;375:6;;:22;;;;;;;;;;;;;;;;;;338:66;117:1515;;7:143:2;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;594:96;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;696:126;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:63;;1186:1;1183;1176:12;1127:63;1074:122;:::o;117:1515:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@calcReward_226": {
									"entryPoint": 1499,
									"id": 226,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@harvest_203": {
									"entryPoint": 602,
									"id": 203,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_177": {
									"entryPoint": 891,
									"id": 177,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakedAmount_271": {
									"entryPoint": 528,
									"id": 271,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@unstake_259": {
									"entryPoint": 159,
									"id": 259,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_ccab2b4854c6e8fbd0d546923d213398c137f7cbe63c3f3d8dbdcabf0f35e942_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1711,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1761,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1816,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ccab2b4854c6e8fbd0d546923d213398c137f7cbe63c3f3d8dbdcabf0f35e942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2282,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2329,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2376,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_ccab2b4854c6e8fbd0d546923d213398c137f7cbe63c3f3d8dbdcabf0f35e942": {
									"entryPoint": 2381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5853:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "67:77:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "92:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "77:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "132:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "108:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "108:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "45:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "53:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "61:5:2",
														"type": ""
													}
												],
												"src": "7:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "202:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "212:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "234:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "221:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "212:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "250:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "250:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "250:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "180:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "188:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "196:5:2",
														"type": ""
													}
												],
												"src": "150:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "369:271:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "415:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "417:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "417:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "417:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "390:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "399:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "386:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "386:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "382:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "382:32:2"
															},
															"nodeType": "YulIf",
															"src": "379:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "508:125:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "523:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "537:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "527:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "552:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "595:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "606:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "591:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "591:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "615:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "562:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "552:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "339:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "350:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "362:6:2",
														"type": ""
													}
												],
												"src": "295:345:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "712:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "758:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "760:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "760:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "760:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "733:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "742:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "729:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "729:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "754:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "725:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "725:32:2"
															},
															"nodeType": "YulIf",
															"src": "722:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "851:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "866:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "870:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "895:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "930:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "941:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "926:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "926:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "950:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "905:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "905:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "895:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "682:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "693:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "705:6:2",
														"type": ""
													}
												],
												"src": "646:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1046:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1063:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1086:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1068:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1068:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1056:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1056:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1056:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1034:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1041:3:2",
														"type": ""
													}
												],
												"src": "981:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1251:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1261:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1327:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1332:2:2",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1268:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1268:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1261:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1433:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ccab2b4854c6e8fbd0d546923d213398c137f7cbe63c3f3d8dbdcabf0f35e942",
																	"nodeType": "YulIdentifier",
																	"src": "1344:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1344:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1344:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1446:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1457:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1462:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1453:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1453:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1446:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ccab2b4854c6e8fbd0d546923d213398c137f7cbe63c3f3d8dbdcabf0f35e942_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1239:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1247:3:2",
														"type": ""
													}
												],
												"src": "1105:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1542:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1559:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1582:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1564:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1564:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1552:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1552:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1552:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1530:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1537:3:2",
														"type": ""
													}
												],
												"src": "1477:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1755:288:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1765:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1777:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1788:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1773:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1773:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1765:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1845:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1858:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1869:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1854:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1854:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1801:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1801:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1801:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1926:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1939:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1950:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1935:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1935:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1882:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1882:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1882:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2008:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2021:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2032:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2017:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2017:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1964:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1964:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1964:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1711:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1723:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1731:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1739:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1750:4:2",
														"type": ""
													}
												],
												"src": "1601:442:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2175:206:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2185:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2197:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2208:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2193:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2193:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2185:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2265:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2278:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2289:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2274:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2274:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2221:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2221:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2221:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2346:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2359:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2370:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2355:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2355:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2302:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2302:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2302:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2139:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2151:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2159:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2170:4:2",
														"type": ""
													}
												],
												"src": "2049:332:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2558:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2568:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2580:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2591:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2576:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2576:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2568:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2615:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2626:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2611:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2611:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2634:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2640:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2630:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2630:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2604:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2604:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2604:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2660:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2794:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ccab2b4854c6e8fbd0d546923d213398c137f7cbe63c3f3d8dbdcabf0f35e942_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2668:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2668:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2660:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ccab2b4854c6e8fbd0d546923d213398c137f7cbe63c3f3d8dbdcabf0f35e942__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2538:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2553:4:2",
														"type": ""
													}
												],
												"src": "2387:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2910:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2920:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2932:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2943:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2928:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2928:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2920:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3000:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3013:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3024:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3009:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3009:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2956:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2956:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2956:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2882:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2894:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2905:4:2",
														"type": ""
													}
												],
												"src": "2812:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3080:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3090:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3106:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3100:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3100:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3090:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3073:6:2",
														"type": ""
													}
												],
												"src": "3040:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3217:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3234:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3239:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3227:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3227:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3227:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3255:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3274:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3279:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3270:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3270:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3255:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3189:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3194:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3205:11:2",
														"type": ""
													}
												],
												"src": "3121:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3340:261:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3350:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3373:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3355:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3355:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3350:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3384:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3407:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3389:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3389:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3384:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3547:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3549:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3549:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3549:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3468:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3475:66:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3543:1:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3471:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3471:74:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3465:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3465:81:2"
															},
															"nodeType": "YulIf",
															"src": "3462:107:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3579:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3590:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3593:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3586:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3586:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3327:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3330:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3336:3:2",
														"type": ""
													}
												],
												"src": "3296:305:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3649:143:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3659:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3682:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3664:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3664:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3659:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3693:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3716:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3698:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3698:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3693:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3740:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "3742:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3742:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3742:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3737:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3730:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3730:9:2"
															},
															"nodeType": "YulIf",
															"src": "3727:35:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3772:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3781:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3784:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3777:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3777:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "3772:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3638:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3641:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "3647:1:2",
														"type": ""
													}
												],
												"src": "3607:185:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3846:300:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3856:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3879:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3861:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3861:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3856:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3890:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3913:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3895:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3895:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3890:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4088:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4090:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4090:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4090:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4000:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3993:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3993:9:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3986:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3986:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4008:1:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4015:66:2",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4083:1:2"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4011:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4011:74:2"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4005:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4005:81:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3982:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3982:105:2"
															},
															"nodeType": "YulIf",
															"src": "3979:131:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4120:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4135:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4138:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4131:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4131:9:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "4120:7:2"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3829:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3832:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "3838:7:2",
														"type": ""
													}
												],
												"src": "3798:348:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4197:146:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4207:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4230:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4212:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4212:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4207:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4241:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4264:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4246:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4246:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4241:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4288:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4290:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4290:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4290:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4282:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4285:1:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4279:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4279:8:2"
															},
															"nodeType": "YulIf",
															"src": "4276:34:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4320:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4332:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4335:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4328:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4328:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4320:4:2"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4183:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4186:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4192:4:2",
														"type": ""
													}
												],
												"src": "4152:191:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4394:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4404:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4433:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4415:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4415:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4404:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4376:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4386:7:2",
														"type": ""
													}
												],
												"src": "4349:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4493:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4503:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4528:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4521:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4521:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4514:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4514:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4503:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4475:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4485:7:2",
														"type": ""
													}
												],
												"src": "4451:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4592:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4602:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4617:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4624:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4613:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4613:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4602:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4574:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4584:7:2",
														"type": ""
													}
												],
												"src": "4547:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4724:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4734:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4745:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4734:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4706:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4716:7:2",
														"type": ""
													}
												],
												"src": "4679:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4790:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4807:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4810:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4800:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4800:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4800:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4904:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4907:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4897:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4897:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4897:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4928:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4931:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4921:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4921:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4921:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4762:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4976:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4993:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4996:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4986:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4986:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4986:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5090:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5093:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5083:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5083:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5083:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5114:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5117:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5107:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5107:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5107:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "4948:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5223:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5240:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5243:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5233:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5233:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5233:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "5134:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5346:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5363:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5366:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5356:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5356:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5356:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "5257:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5486:114:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5508:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5516:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5504:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5504:14:2"
																	},
																	{
																		"hexValue": "596f7520686176656e2774207374616b656420616e7920636f696e7320796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5520:34:2",
																		"type": "",
																		"value": "You haven't staked any coins yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5497:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5497:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5497:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5576:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5584:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5572:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5572:15:2"
																	},
																	{
																		"hexValue": "2e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5589:3:2",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5565:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5565:28:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5565:28:2"
														}
													]
												},
												"name": "store_literal_in_memory_ccab2b4854c6e8fbd0d546923d213398c137f7cbe63c3f3d8dbdcabf0f35e942",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5478:6:2",
														"type": ""
													}
												],
												"src": "5380:220:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5646:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5700:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5709:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5712:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5702:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5702:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5702:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5669:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5691:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "5676:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5676:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5666:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5666:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5659:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5659:40:2"
															},
															"nodeType": "YulIf",
															"src": "5656:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5639:5:2",
														"type": ""
													}
												],
												"src": "5606:116:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5771:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5828:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5837:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5840:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5830:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5830:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5830:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5794:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5819:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5801:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5801:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5791:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5791:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5784:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5784:43:2"
															},
															"nodeType": "YulIf",
															"src": "5781:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5764:5:2",
														"type": ""
													}
												],
												"src": "5728:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_ccab2b4854c6e8fbd0d546923d213398c137f7cbe63c3f3d8dbdcabf0f35e942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_ccab2b4854c6e8fbd0d546923d213398c137f7cbe63c3f3d8dbdcabf0f35e942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ccab2b4854c6e8fbd0d546923d213398c137f7cbe63c3f3d8dbdcabf0f35e942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ccab2b4854c6e8fbd0d546923d213398c137f7cbe63c3f3d8dbdcabf0f35e942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_ccab2b4854c6e8fbd0d546923d213398c137f7cbe63c3f3d8dbdcabf0f35e942(memPtr) {\n\n        mstore(add(memPtr, 0), \"You haven't staked any coins yet\")\n\n        mstore(add(memPtr, 32), \".\")\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80632def662014610051578063373d61321461005b5780634641257d14610079578063a694fc3a14610083575b600080fd5b61005961009f565b005b610063610210565b6040516100709190610761565b60405180910390f35b61008161025a565b005b61009d60048036038101906100989190610673565b61037b565b005b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090506000816000015111610148576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013f90610741565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3361018e846105db565b846000015161019d919061078d565b6040518363ffffffff1660e01b81526004016101ba929190610718565b602060405180830381600087803b1580156101d457600080fd5b505af11580156101e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020c9190610646565b5050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050905060006102c7826105db565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610324929190610718565b602060405180830381600087803b15801561033e57600080fd5b505af1158015610352573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103769190610646565b505050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090506000816000015111156104a75760006103f5826105db565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610452929190610718565b602060405180830381600087803b15801561046c57600080fd5b505af1158015610480573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a49190610646565b50505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610504939291906106e1565b602060405180830381600087803b15801561051e57600080fd5b505af1158015610532573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105569190610646565b5060006040518060400160405280836000015185610574919061078d565b815260200142815250905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155905050505050565b6000603c8260200151426105ef919061086e565b60025484600001516106019190610814565b61060b9190610814565b61061591906107e3565b9050919050565b60008151905061062b8161099c565b92915050565b600081359050610640816109b3565b92915050565b60006020828403121561065c5761065b610948565b5b600061066a8482850161061c565b91505092915050565b60006020828403121561068957610688610948565b5b600061069784828501610631565b91505092915050565b6106a9816108a2565b82525050565b60006106bc60218361077c565b91506106c78261094d565b604082019050919050565b6106db816108e0565b82525050565b60006060820190506106f660008301866106a0565b61070360208301856106a0565b61071060408301846106d2565b949350505050565b600060408201905061072d60008301856106a0565b61073a60208301846106d2565b9392505050565b6000602082019050818103600083015261075a816106af565b9050919050565b600060208201905061077660008301846106d2565b92915050565b600082825260208201905092915050565b6000610798826108e0565b91506107a3836108e0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156107d8576107d76108ea565b5b828201905092915050565b60006107ee826108e0565b91506107f9836108e0565b92508261080957610808610919565b5b828204905092915050565b600061081f826108e0565b915061082a836108e0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610863576108626108ea565b5b828202905092915050565b6000610879826108e0565b9150610884836108e0565b925082821015610897576108966108ea565b5b828203905092915050565b60006108ad826108c0565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f596f7520686176656e2774207374616b656420616e7920636f696e732079657460008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b6109a5816108b4565b81146109b057600080fd5b50565b6109bc816108e0565b81146109c757600080fd5b5056fea26469706673582212202ed89f1ac4290b59a033057a900aa5298b530b904e2d1fd0b7db08478082f61964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2DEF6620 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x373D6132 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x83 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x9F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x63 PUSH2 0x210 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x81 PUSH2 0x25A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x98 SWAP2 SWAP1 PUSH2 0x673 JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT PUSH2 0x148 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F SWAP1 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH2 0x18E DUP5 PUSH2 0x5DB JUMP JUMPDEST DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x78D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BA SWAP3 SWAP2 SWAP1 PUSH2 0x718 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x646 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x2C7 DUP3 PUSH2 0x5DB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x324 SWAP3 SWAP2 SWAP1 PUSH2 0x718 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x352 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x646 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x0 PUSH2 0x3F5 DUP3 PUSH2 0x5DB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x452 SWAP3 SWAP2 SWAP1 PUSH2 0x718 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x480 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A4 SWAP2 SWAP1 PUSH2 0x646 JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x504 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x51E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x532 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x556 SWAP2 SWAP1 PUSH2 0x646 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH1 0x0 ADD MLOAD DUP6 PUSH2 0x574 SWAP2 SWAP1 PUSH2 0x78D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3C DUP3 PUSH1 0x20 ADD MLOAD TIMESTAMP PUSH2 0x5EF SWAP2 SWAP1 PUSH2 0x86E JUMP JUMPDEST PUSH1 0x2 SLOAD DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x601 SWAP2 SWAP1 PUSH2 0x814 JUMP JUMPDEST PUSH2 0x60B SWAP2 SWAP1 PUSH2 0x814 JUMP JUMPDEST PUSH2 0x615 SWAP2 SWAP1 PUSH2 0x7E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x62B DUP2 PUSH2 0x99C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x640 DUP2 PUSH2 0x9B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x65C JUMPI PUSH2 0x65B PUSH2 0x948 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x66A DUP5 DUP3 DUP6 ADD PUSH2 0x61C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x689 JUMPI PUSH2 0x688 PUSH2 0x948 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x697 DUP5 DUP3 DUP6 ADD PUSH2 0x631 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6A9 DUP2 PUSH2 0x8A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6BC PUSH1 0x21 DUP4 PUSH2 0x77C JUMP JUMPDEST SWAP2 POP PUSH2 0x6C7 DUP3 PUSH2 0x94D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6DB DUP2 PUSH2 0x8E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x6F6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x6A0 JUMP JUMPDEST PUSH2 0x703 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x6A0 JUMP JUMPDEST PUSH2 0x710 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x6D2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x72D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x6A0 JUMP JUMPDEST PUSH2 0x73A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6D2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x75A DUP2 PUSH2 0x6AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x776 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x798 DUP3 PUSH2 0x8E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x7A3 DUP4 PUSH2 0x8E0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x7D8 JUMPI PUSH2 0x7D7 PUSH2 0x8EA JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EE DUP3 PUSH2 0x8E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x7F9 DUP4 PUSH2 0x8E0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x809 JUMPI PUSH2 0x808 PUSH2 0x919 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x81F DUP3 PUSH2 0x8E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x82A DUP4 PUSH2 0x8E0 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x863 JUMPI PUSH2 0x862 PUSH2 0x8EA JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x879 DUP3 PUSH2 0x8E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x884 DUP4 PUSH2 0x8E0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x897 JUMPI PUSH2 0x896 PUSH2 0x8EA JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8AD DUP3 PUSH2 0x8C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x596F7520686176656E2774207374616B656420616E7920636F696E7320796574 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x9A5 DUP2 PUSH2 0x8B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x9B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x9BC DUP2 PUSH2 0x8E0 JUMP JUMPDEST DUP2 EQ PUSH2 0x9C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0xD8 SWAP16 BYTE 0xC4 0x29 SIGNEXTEND MSIZE LOG0 CALLER SDIV PUSH27 0x900AA5298B530B904E2D1FD0B7DB08478082F61964736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "117:1515:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1279:235;;;:::i;:::-;;1520:110;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;900:194;;;:::i;:::-;;410:484;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1279:235;1315:21;1339:15;:27;1355:10;1339:27;;;;;;;;;;;;;;;1315:51;;;;;;;;;;;;;;;;;;;;;;;;;;;1398:1;1384:4;:11;;;:15;1376:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;1448:6;;;;;;;;;;:15;;;1464:10;1490:16;1501:4;1490:10;:16::i;:::-;1476:4;:11;;;:30;;;;:::i;:::-;1448:59;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1305:209;1279:235::o;1520:110::-;1564:7;1589:15;:27;1605:10;1589:27;;;;;;;;;;;;;;;:34;;;1582:41;;1520:110;:::o;900:194::-;936:21;960:15;:27;976:10;960:27;;;;;;;;;;;;;;;936:51;;;;;;;;;;;;;;;;;;;;;;;;;;;997:20;1020:16;1031:4;1020:10;:16::i;:::-;997:39;;1046:6;;;;;;;;;;:15;;;1062:10;1074:12;1046:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;926:168;;900:194::o;410:484::-;458:24;485:15;:27;501:10;485:27;;;;;;;;;;;;;;;458:54;;;;;;;;;;;;;;;;;;;;;;;;;;;543:1;526:7;:14;;;:18;522:145;;;559:20;582:19;593:7;582:10;:19::i;:::-;559:42;;615:6;;;;;;;;;;:15;;;631:10;643:12;615:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;545:122;522:145;698:6;;;;;;;;;;:19;;;718:10;738:4;745:6;698:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;762:24;789:51;;;;;;;;808:7;:14;;;799:6;:23;;;;:::i;:::-;789:51;;;;824:15;789:51;;;762:78;;880:7;850:15;:27;866:10;850:27;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;;448:446;;410:484;:::o;1100:173::-;1165:7;1264:2;1246:4;:14;;;1228:15;:32;;;;:::i;:::-;1204:20;;1190:4;:11;;;:34;;;;:::i;:::-;:71;;;;:::i;:::-;:76;;;;:::i;:::-;1183:83;;1100:173;;;:::o;7:137:2:-;61:5;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;7:137;;;;:::o;150:139::-;196:5;234:6;221:20;212:29;;250:33;277:5;250:33;:::i;:::-;150:139;;;;:::o;295:345::-;362:6;411:2;399:9;390:7;386:23;382:32;379:119;;;417:79;;:::i;:::-;379:119;537:1;562:61;615:7;606:6;595:9;591:22;562:61;:::i;:::-;552:71;;508:125;295:345;;;;:::o;646:329::-;705:6;754:2;742:9;733:7;729:23;725:32;722:119;;;760:79;;:::i;:::-;722:119;880:1;905:53;950:7;941:6;930:9;926:22;905:53;:::i;:::-;895:63;;851:117;646:329;;;;:::o;981:118::-;1068:24;1086:5;1068:24;:::i;:::-;1063:3;1056:37;981:118;;:::o;1105:366::-;1247:3;1268:67;1332:2;1327:3;1268:67;:::i;:::-;1261:74;;1344:93;1433:3;1344:93;:::i;:::-;1462:2;1457:3;1453:12;1446:19;;1105:366;;;:::o;1477:118::-;1564:24;1582:5;1564:24;:::i;:::-;1559:3;1552:37;1477:118;;:::o;1601:442::-;1750:4;1788:2;1777:9;1773:18;1765:26;;1801:71;1869:1;1858:9;1854:17;1845:6;1801:71;:::i;:::-;1882:72;1950:2;1939:9;1935:18;1926:6;1882:72;:::i;:::-;1964;2032:2;2021:9;2017:18;2008:6;1964:72;:::i;:::-;1601:442;;;;;;:::o;2049:332::-;2170:4;2208:2;2197:9;2193:18;2185:26;;2221:71;2289:1;2278:9;2274:17;2265:6;2221:71;:::i;:::-;2302:72;2370:2;2359:9;2355:18;2346:6;2302:72;:::i;:::-;2049:332;;;;;:::o;2387:419::-;2553:4;2591:2;2580:9;2576:18;2568:26;;2640:9;2634:4;2630:20;2626:1;2615:9;2611:17;2604:47;2668:131;2794:4;2668:131;:::i;:::-;2660:139;;2387:419;;;:::o;2812:222::-;2905:4;2943:2;2932:9;2928:18;2920:26;;2956:71;3024:1;3013:9;3009:17;3000:6;2956:71;:::i;:::-;2812:222;;;;:::o;3121:169::-;3205:11;3239:6;3234:3;3227:19;3279:4;3274:3;3270:14;3255:29;;3121:169;;;;:::o;3296:305::-;3336:3;3355:20;3373:1;3355:20;:::i;:::-;3350:25;;3389:20;3407:1;3389:20;:::i;:::-;3384:25;;3543:1;3475:66;3471:74;3468:1;3465:81;3462:107;;;3549:18;;:::i;:::-;3462:107;3593:1;3590;3586:9;3579:16;;3296:305;;;;:::o;3607:185::-;3647:1;3664:20;3682:1;3664:20;:::i;:::-;3659:25;;3698:20;3716:1;3698:20;:::i;:::-;3693:25;;3737:1;3727:35;;3742:18;;:::i;:::-;3727:35;3784:1;3781;3777:9;3772:14;;3607:185;;;;:::o;3798:348::-;3838:7;3861:20;3879:1;3861:20;:::i;:::-;3856:25;;3895:20;3913:1;3895:20;:::i;:::-;3890:25;;4083:1;4015:66;4011:74;4008:1;4005:81;4000:1;3993:9;3986:17;3982:105;3979:131;;;4090:18;;:::i;:::-;3979:131;4138:1;4135;4131:9;4120:20;;3798:348;;;;:::o;4152:191::-;4192:4;4212:20;4230:1;4212:20;:::i;:::-;4207:25;;4246:20;4264:1;4246:20;:::i;:::-;4241:25;;4285:1;4282;4279:8;4276:34;;;4290:18;;:::i;:::-;4276:34;4335:1;4332;4328:9;4320:17;;4152:191;;;;:::o;4349:96::-;4386:7;4415:24;4433:5;4415:24;:::i;:::-;4404:35;;4349:96;;;:::o;4451:90::-;4485:7;4528:5;4521:13;4514:21;4503:32;;4451:90;;;:::o;4547:126::-;4584:7;4624:42;4617:5;4613:54;4602:65;;4547:126;;;:::o;4679:77::-;4716:7;4745:5;4734:16;;4679:77;;;:::o;4762:180::-;4810:77;4807:1;4800:88;4907:4;4904:1;4897:15;4931:4;4928:1;4921:15;4948:180;4996:77;4993:1;4986:88;5093:4;5090:1;5083:15;5117:4;5114:1;5107:15;5257:117;5366:1;5363;5356:12;5380:220;5520:34;5516:1;5508:6;5504:14;5497:58;5589:3;5584:2;5576:6;5572:15;5565:28;5380:220;:::o;5606:116::-;5676:21;5691:5;5676:21;:::i;:::-;5669:5;5666:32;5656:60;;5712:1;5709;5702:12;5656:60;5606:116;:::o;5728:122::-;5801:24;5819:5;5801:24;:::i;:::-;5794:5;5791:35;5781:63;;5840:1;5837;5830:12;5781:63;5728:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "512000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"harvest()": "infinite",
								"stake(uint256)": "infinite",
								"stakedAmount()": "2532",
								"unstake()": "infinite"
							},
							"internal": {
								"calcReward(struct StakeTB.stakeInfo memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 117,
									"end": 1632,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 117,
									"end": 1632,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 117,
									"end": 1632,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 240,
									"end": 250,
									"name": "PUSH",
									"source": 1,
									"value": "2386F26FC10000"
								},
								{
									"begin": 209,
									"end": 250,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 209,
									"end": 250,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 338,
									"end": 404,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 338,
									"end": 404,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 338,
									"end": 404,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 338,
									"end": 404,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 338,
									"end": 404,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 338,
									"end": 404,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 338,
									"end": 404,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 338,
									"end": 404,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 338,
									"end": 404,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 338,
									"end": 404,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 338,
									"end": 404,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 338,
									"end": 404,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 338,
									"end": 404,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 338,
									"end": 404,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 338,
									"end": 404,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 338,
									"end": 404,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 338,
									"end": 404,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 338,
									"end": 404,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 338,
									"end": 404,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 338,
									"end": 404,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 338,
									"end": 404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 338,
									"end": 404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 338,
									"end": 404,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 338,
									"end": 404,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 338,
									"end": 404,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 338,
									"end": 404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 338,
									"end": 404,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 338,
									"end": 404,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 338,
									"end": 404,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 338,
									"end": 404,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 338,
									"end": 404,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 338,
									"end": 404,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 338,
									"end": 404,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 338,
									"end": 404,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 338,
									"end": 404,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 391,
									"end": 396,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 375,
									"end": 381,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 375,
									"end": 381,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 375,
									"end": 397,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 375,
									"end": 397,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 375,
									"end": 397,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 375,
									"end": 397,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 375,
									"end": 397,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 375,
									"end": 397,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 375,
									"end": 397,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 375,
									"end": 397,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 375,
									"end": 397,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 375,
									"end": 397,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 375,
									"end": 397,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 375,
									"end": 397,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 375,
									"end": 397,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 375,
									"end": 397,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 375,
									"end": 397,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 375,
									"end": 397,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 375,
									"end": 397,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 375,
									"end": 397,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 338,
									"end": 404,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 117,
									"end": 1632,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 117,
									"end": 1632,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 482,
									"end": 489,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 416,
									"end": 490,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 416,
									"end": 490,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 372,
									"end": 500,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 631,
									"end": 638,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 678,
									"end": 683,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 649,
									"end": 684,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 649,
									"end": 684,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 733,
									"end": 740,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 815,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 766,
									"end": 771,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 762,
									"end": 816,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 751,
									"end": 816,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 751,
									"end": 816,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1060,
									"end": 1061,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1057,
									"end": 1058,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1050,
									"end": 1062,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1165,
									"end": 1170,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1140,
									"end": 1145,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1137,
									"end": 1172,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1186,
									"end": 1187,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1184,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1176,
									"end": 1188,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 117,
									"end": 1632,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 117,
									"end": 1632,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 117,
									"end": 1632,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 1632,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 117,
									"end": 1632,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 1632,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 1632,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 117,
									"end": 1632,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 1632,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202ed89f1ac4290b59a033057a900aa5298b530b904e2d1fd0b7db08478082f61964736f6c63430008070033",
									".code": [
										{
											"begin": 117,
											"end": 1632,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "PUSH",
											"source": 1,
											"value": "2DEF6620"
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "PUSH",
											"source": 1,
											"value": "373D6132"
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "PUSH",
											"source": 1,
											"value": "4641257D"
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "PUSH",
											"source": 1,
											"value": "A694FC3A"
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 117,
											"end": 1632,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1514,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1279,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1279,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1279,
											"end": 1514,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1279,
											"end": 1514,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1279,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1514,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1630,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1520,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1520,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1520,
											"end": 1630,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1520,
											"end": 1630,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1520,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1630,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1520,
											"end": 1630,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1520,
											"end": 1630,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1520,
											"end": 1630,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1520,
											"end": 1630,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1520,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1630,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1520,
											"end": 1630,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1630,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1630,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1630,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 900,
											"end": 1094,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 900,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 900,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 900,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 900,
											"end": 1094,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 900,
											"end": 1094,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 900,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 900,
											"end": 1094,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 410,
											"end": 894,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 410,
											"end": 894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 410,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 410,
											"end": 894,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 410,
											"end": 894,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 410,
											"end": 894,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 410,
											"end": 894,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 410,
											"end": 894,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 410,
											"end": 894,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 410,
											"end": 894,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 410,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 410,
											"end": 894,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 410,
											"end": 894,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 410,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 410,
											"end": 894,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 410,
											"end": 894,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 410,
											"end": 894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 410,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 410,
											"end": 894,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 410,
											"end": 894,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 410,
											"end": 894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 410,
											"end": 894,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1514,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1279,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1336,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1354,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1339,
											"end": 1366,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1355,
											"end": 1365,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1366,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1339,
											"end": 1366,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1366,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1339,
											"end": 1366,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1366,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1339,
											"end": 1366,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1366,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1339,
											"end": 1366,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1366,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1366,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1366,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1366,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1366,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1366,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1366,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1366,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1366,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1366,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1366,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1366,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1366,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1366,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1366,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1315,
											"end": 1366,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1366,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1366,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1366,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1366,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1366,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1399,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1388,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1395,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1395,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1399,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1376,
											"end": 1437,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1437,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1376,
											"end": 1437,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1437,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1376,
											"end": 1437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1437,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1437,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1376,
											"end": 1437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1376,
											"end": 1437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1376,
											"end": 1437,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1376,
											"end": 1437,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1376,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1437,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1376,
											"end": 1437,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1437,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1437,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1437,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1437,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1437,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1376,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1454,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1454,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1448,
											"end": 1454,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1454,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1454,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1448,
											"end": 1454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1463,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1448,
											"end": 1463,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1463,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1464,
											"end": 1474,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1490,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1501,
											"end": 1505,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1490,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1490,
											"end": 1506,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1490,
											"end": 1506,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1490,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1487,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1487,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1487,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1476,
											"end": 1506,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1506,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1476,
											"end": 1506,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1476,
											"end": 1506,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1476,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1305,
											"end": 1514,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1514,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1520,
											"end": 1630,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1520,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1571,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1604,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1589,
											"end": 1616,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 1615,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1616,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1589,
											"end": 1616,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1616,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1589,
											"end": 1616,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1616,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1616,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1589,
											"end": 1616,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1616,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1616,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1589,
											"end": 1616,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1616,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1616,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1623,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1623,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1623,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1630,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 900,
											"end": 1094,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 900,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 936,
											"end": 957,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 960,
											"end": 975,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 960,
											"end": 987,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 976,
											"end": 986,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 960,
											"end": 987,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 960,
											"end": 987,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 960,
											"end": 987,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 960,
											"end": 987,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 960,
											"end": 987,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 960,
											"end": 987,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 960,
											"end": 987,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 960,
											"end": 987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 960,
											"end": 987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 960,
											"end": 987,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 960,
											"end": 987,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 960,
											"end": 987,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 960,
											"end": 987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 960,
											"end": 987,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 960,
											"end": 987,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 936,
											"end": 987,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 936,
											"end": 987,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 936,
											"end": 987,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 936,
											"end": 987,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 936,
											"end": 987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 936,
											"end": 987,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 936,
											"end": 987,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 936,
											"end": 987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 936,
											"end": 987,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 936,
											"end": 987,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 987,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 936,
											"end": 987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 936,
											"end": 987,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 936,
											"end": 987,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 936,
											"end": 987,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 936,
											"end": 987,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 936,
											"end": 987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 936,
											"end": 987,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 936,
											"end": 987,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 936,
											"end": 987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 936,
											"end": 987,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 936,
											"end": 987,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 936,
											"end": 987,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 936,
											"end": 987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 936,
											"end": 987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 936,
											"end": 987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 936,
											"end": 987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1020,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1031,
											"end": 1035,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1020,
											"end": 1036,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1020,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1020,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1046,
											"end": 1052,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1052,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1052,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1052,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1046,
											"end": 1052,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1052,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1052,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1052,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1046,
											"end": 1052,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1061,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1046,
											"end": 1061,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1061,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1062,
											"end": 1072,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1086,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 926,
											"end": 1094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 926,
											"end": 1094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 900,
											"end": 1094,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 410,
											"end": 894,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 410,
											"end": 894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 458,
											"end": 482,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 485,
											"end": 500,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 485,
											"end": 512,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 511,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 485,
											"end": 512,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 485,
											"end": 512,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 485,
											"end": 512,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 485,
											"end": 512,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 485,
											"end": 512,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 485,
											"end": 512,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 485,
											"end": 512,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 485,
											"end": 512,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 485,
											"end": 512,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 485,
											"end": 512,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 485,
											"end": 512,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 485,
											"end": 512,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 485,
											"end": 512,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 458,
											"end": 512,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 458,
											"end": 512,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 458,
											"end": 512,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 458,
											"end": 512,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 458,
											"end": 512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 458,
											"end": 512,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 458,
											"end": 512,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 458,
											"end": 512,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 458,
											"end": 512,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 458,
											"end": 512,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 458,
											"end": 512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 458,
											"end": 512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 458,
											"end": 512,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 458,
											"end": 512,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 458,
											"end": 512,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 458,
											"end": 512,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 458,
											"end": 512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 458,
											"end": 512,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 458,
											"end": 512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 458,
											"end": 512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 458,
											"end": 512,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 458,
											"end": 512,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 458,
											"end": 512,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 458,
											"end": 512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 458,
											"end": 512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 458,
											"end": 512,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 458,
											"end": 512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 543,
											"end": 544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 526,
											"end": 540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 526,
											"end": 540,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 526,
											"end": 544,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 522,
											"end": 667,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 522,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 522,
											"end": 667,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 559,
											"end": 579,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 593,
											"end": 600,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 582,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 582,
											"end": 601,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 582,
											"end": 601,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 582,
											"end": 601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 559,
											"end": 601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 559,
											"end": 601,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 621,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 615,
											"end": 621,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 615,
											"end": 621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 615,
											"end": 621,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 615,
											"end": 621,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 615,
											"end": 621,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 615,
											"end": 621,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 621,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 615,
											"end": 630,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 630,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 615,
											"end": 630,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 631,
											"end": 641,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 643,
											"end": 655,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 615,
											"end": 656,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 615,
											"end": 656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 615,
											"end": 656,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 615,
											"end": 656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 615,
											"end": 656,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 615,
											"end": 656,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 615,
											"end": 656,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 615,
											"end": 656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 615,
											"end": 656,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 615,
											"end": 656,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 656,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 615,
											"end": 656,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 656,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 615,
											"end": 656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 615,
											"end": 656,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 656,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 656,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 615,
											"end": 656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 615,
											"end": 656,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 656,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 656,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 615,
											"end": 656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 615,
											"end": 656,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 615,
											"end": 656,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 615,
											"end": 656,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 615,
											"end": 656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 615,
											"end": 656,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 522,
											"end": 667,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 522,
											"end": 667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 698,
											"end": 704,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 698,
											"end": 704,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 698,
											"end": 704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 698,
											"end": 704,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 698,
											"end": 704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 698,
											"end": 704,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 698,
											"end": 717,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 698,
											"end": 717,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 698,
											"end": 717,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 718,
											"end": 728,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 738,
											"end": 742,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 745,
											"end": 751,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 752,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 698,
											"end": 752,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 698,
											"end": 752,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 698,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 698,
											"end": 752,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 698,
											"end": 752,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 698,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 698,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 698,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 752,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 752,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 698,
											"end": 752,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 698,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 698,
											"end": 752,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 752,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 698,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 752,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 698,
											"end": 752,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 698,
											"end": 752,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 752,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 698,
											"end": 752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 698,
											"end": 752,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 698,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 698,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 698,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 762,
											"end": 786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 789,
											"end": 840,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 789,
											"end": 840,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 789,
											"end": 840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 789,
											"end": 840,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 789,
											"end": 840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 789,
											"end": 840,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 789,
											"end": 840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 789,
											"end": 840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 808,
											"end": 815,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 808,
											"end": 822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 808,
											"end": 822,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 799,
											"end": 805,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 799,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 799,
											"end": 822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 799,
											"end": 822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 799,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 799,
											"end": 822,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 799,
											"end": 822,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 799,
											"end": 822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 789,
											"end": 840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 789,
											"end": 840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 789,
											"end": 840,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 789,
											"end": 840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 824,
											"end": 839,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 789,
											"end": 840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 789,
											"end": 840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 789,
											"end": 840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 762,
											"end": 840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 762,
											"end": 840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 880,
											"end": 887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 850,
											"end": 865,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 850,
											"end": 877,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 876,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 850,
											"end": 877,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 850,
											"end": 877,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 850,
											"end": 877,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 850,
											"end": 877,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 850,
											"end": 877,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 850,
											"end": 877,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 850,
											"end": 877,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 850,
											"end": 877,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 850,
											"end": 877,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 850,
											"end": 877,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 850,
											"end": 877,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 850,
											"end": 877,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 850,
											"end": 877,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 850,
											"end": 877,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 850,
											"end": 877,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 850,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 850,
											"end": 887,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 850,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 850,
											"end": 887,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 850,
											"end": 887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 850,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 850,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 850,
											"end": 887,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 850,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 850,
											"end": 887,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 850,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 850,
											"end": 887,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 850,
											"end": 887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 850,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 850,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 850,
											"end": 887,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 850,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 850,
											"end": 887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 850,
											"end": 887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 448,
											"end": 894,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 448,
											"end": 894,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 410,
											"end": 894,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 410,
											"end": 894,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1100,
											"end": 1273,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1100,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1165,
											"end": 1172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1264,
											"end": 1266,
											"name": "PUSH",
											"source": 1,
											"value": "3C"
										},
										{
											"begin": 1246,
											"end": 1250,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1260,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1246,
											"end": 1260,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1260,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1243,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1224,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1204,
											"end": 1224,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1194,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1201,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1201,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1201,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1190,
											"end": 1261,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1261,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1190,
											"end": 1261,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1190,
											"end": 1261,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1190,
											"end": 1261,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1190,
											"end": 1266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1190,
											"end": 1266,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1190,
											"end": 1266,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1190,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1273,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1273,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1273,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1273,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 61,
											"end": 66,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 92,
											"end": 98,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 86,
											"end": 99,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 132,
											"end": 137,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 150,
											"end": 289,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 150,
											"end": 289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 196,
											"end": 201,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 234,
											"end": 240,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 221,
											"end": 241,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 212,
											"end": 241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 212,
											"end": 241,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 250,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 250,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 250,
											"end": 283,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 250,
											"end": 283,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 250,
											"end": 283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 150,
											"end": 289,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 150,
											"end": 289,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 150,
											"end": 289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 150,
											"end": 289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 150,
											"end": 289,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 640,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 295,
											"end": 640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 362,
											"end": 368,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 413,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 399,
											"end": 408,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 390,
											"end": 397,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 386,
											"end": 409,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 382,
											"end": 414,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 379,
											"end": 498,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 379,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 379,
											"end": 498,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 417,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 417,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 417,
											"end": 496,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 417,
											"end": 496,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 417,
											"end": 496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 379,
											"end": 498,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 379,
											"end": 498,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 537,
											"end": 538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 615,
											"end": 622,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 606,
											"end": 612,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 595,
											"end": 604,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 591,
											"end": 613,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 562,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 562,
											"end": 623,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 562,
											"end": 623,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 562,
											"end": 623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 552,
											"end": 623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 552,
											"end": 623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 508,
											"end": 633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 295,
											"end": 640,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 295,
											"end": 640,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 295,
											"end": 640,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 295,
											"end": 640,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 295,
											"end": 640,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 646,
											"end": 975,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 646,
											"end": 975,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 705,
											"end": 711,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 754,
											"end": 756,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 742,
											"end": 751,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 733,
											"end": 740,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 729,
											"end": 752,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 725,
											"end": 757,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 722,
											"end": 841,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 722,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 722,
											"end": 841,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 760,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 760,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 760,
											"end": 839,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 760,
											"end": 839,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 760,
											"end": 839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 722,
											"end": 841,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 722,
											"end": 841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 880,
											"end": 881,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 905,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 950,
											"end": 957,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 941,
											"end": 947,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 930,
											"end": 939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 926,
											"end": 948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 905,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 905,
											"end": 958,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 905,
											"end": 958,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 905,
											"end": 958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 895,
											"end": 958,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 895,
											"end": 958,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 851,
											"end": 968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 646,
											"end": 975,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 646,
											"end": 975,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 646,
											"end": 975,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 646,
											"end": 975,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 646,
											"end": 975,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1086,
											"end": 1091,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1066,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1105,
											"end": 1471,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1105,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1247,
											"end": 1250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1332,
											"end": 1334,
											"name": "PUSH",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1327,
											"end": 1330,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1268,
											"end": 1335,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1268,
											"end": 1335,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1268,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1261,
											"end": 1335,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1261,
											"end": 1335,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1344,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1433,
											"end": 1436,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1344,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1344,
											"end": 1437,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1344,
											"end": 1437,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1344,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1464,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1457,
											"end": 1460,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1453,
											"end": 1465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1471,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1471,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1471,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1477,
											"end": 1595,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1477,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1564,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1582,
											"end": 1587,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1564,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1564,
											"end": 1588,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1564,
											"end": 1588,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1564,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 1562,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1589,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1477,
											"end": 1595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1477,
											"end": 1595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1477,
											"end": 1595,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1601,
											"end": 2043,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1601,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1754,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1788,
											"end": 1790,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1777,
											"end": 1786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1791,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1765,
											"end": 1791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1765,
											"end": 1791,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1869,
											"end": 1870,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1867,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1854,
											"end": 1871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1851,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1801,
											"end": 1872,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1801,
											"end": 1872,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1801,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1950,
											"end": 1952,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1939,
											"end": 1948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1935,
											"end": 1953,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1926,
											"end": 1932,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1882,
											"end": 1954,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1882,
											"end": 1954,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1882,
											"end": 1954,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2032,
											"end": 2034,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2030,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2035,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1964,
											"end": 2036,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1964,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1964,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 2043,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 2043,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 2043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 2043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 2043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 2043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 2043,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2049,
											"end": 2381,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2049,
											"end": 2381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2174,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2210,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2197,
											"end": 2206,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2193,
											"end": 2211,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2221,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2289,
											"end": 2290,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2265,
											"end": 2271,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2221,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2221,
											"end": 2292,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2221,
											"end": 2292,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2221,
											"end": 2292,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2302,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2370,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2359,
											"end": 2368,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2355,
											"end": 2373,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2352,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2302,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2302,
											"end": 2374,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2302,
											"end": 2374,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2302,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2049,
											"end": 2381,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2049,
											"end": 2381,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2049,
											"end": 2381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2049,
											"end": 2381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2049,
											"end": 2381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2049,
											"end": 2381,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2387,
											"end": 2806,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2387,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2591,
											"end": 2593,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2589,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2594,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2568,
											"end": 2594,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2568,
											"end": 2594,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2640,
											"end": 2649,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2634,
											"end": 2638,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2630,
											"end": 2650,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 2627,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2624,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2611,
											"end": 2628,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2604,
											"end": 2651,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2794,
											"end": 2798,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2668,
											"end": 2799,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2668,
											"end": 2799,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2668,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2799,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2799,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2387,
											"end": 2806,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2387,
											"end": 2806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2387,
											"end": 2806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2387,
											"end": 2806,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2812,
											"end": 3034,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2812,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2905,
											"end": 2909,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2943,
											"end": 2945,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2932,
											"end": 2941,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2928,
											"end": 2946,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2956,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3024,
											"end": 3025,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3013,
											"end": 3022,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3026,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3000,
											"end": 3006,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2956,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2956,
											"end": 3027,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2956,
											"end": 3027,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2956,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2812,
											"end": 3034,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2812,
											"end": 3034,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2812,
											"end": 3034,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2812,
											"end": 3034,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2812,
											"end": 3034,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3121,
											"end": 3290,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3121,
											"end": 3290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3205,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3239,
											"end": 3245,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3234,
											"end": 3237,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3227,
											"end": 3246,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3279,
											"end": 3283,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3274,
											"end": 3277,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3270,
											"end": 3284,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3284,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3284,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3121,
											"end": 3290,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3121,
											"end": 3290,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3121,
											"end": 3290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3121,
											"end": 3290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3121,
											"end": 3290,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3296,
											"end": 3601,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3296,
											"end": 3601,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3336,
											"end": 3339,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3373,
											"end": 3374,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3355,
											"end": 3375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3355,
											"end": 3375,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3355,
											"end": 3375,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3355,
											"end": 3375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3350,
											"end": 3375,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3350,
											"end": 3375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3389,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3407,
											"end": 3408,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3389,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3389,
											"end": 3409,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3389,
											"end": 3409,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3389,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3409,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3544,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3541,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3471,
											"end": 3545,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3469,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3546,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3462,
											"end": 3569,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3462,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3462,
											"end": 3569,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3462,
											"end": 3569,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3462,
											"end": 3569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3593,
											"end": 3594,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3590,
											"end": 3591,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3586,
											"end": 3595,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3579,
											"end": 3595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3579,
											"end": 3595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3601,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3601,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3601,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3601,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3601,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3607,
											"end": 3792,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3607,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3647,
											"end": 3648,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3682,
											"end": 3683,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3664,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3664,
											"end": 3684,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3664,
											"end": 3684,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3664,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3659,
											"end": 3684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3659,
											"end": 3684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3698,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3716,
											"end": 3717,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3698,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3698,
											"end": 3718,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3698,
											"end": 3718,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3698,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3693,
											"end": 3718,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3693,
											"end": 3718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3737,
											"end": 3738,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3727,
											"end": 3762,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3742,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 3742,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3742,
											"end": 3760,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3742,
											"end": 3760,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 3742,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3762,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3727,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3784,
											"end": 3785,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3781,
											"end": 3782,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3786,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3772,
											"end": 3786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3772,
											"end": 3786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3607,
											"end": 3792,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3607,
											"end": 3792,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3607,
											"end": 3792,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3607,
											"end": 3792,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3607,
											"end": 3792,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3798,
											"end": 4146,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3798,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3838,
											"end": 3845,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3861,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3879,
											"end": 3880,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3861,
											"end": 3881,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3861,
											"end": 3881,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3861,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3856,
											"end": 3881,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3856,
											"end": 3881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3895,
											"end": 3915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3913,
											"end": 3914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3895,
											"end": 3915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3895,
											"end": 3915,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3895,
											"end": 3915,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3895,
											"end": 3915,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3890,
											"end": 3915,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3890,
											"end": 3915,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4083,
											"end": 4084,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4015,
											"end": 4081,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4011,
											"end": 4085,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4009,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4005,
											"end": 4086,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4000,
											"end": 4001,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3993,
											"end": 4002,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4003,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3982,
											"end": 4087,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4110,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3979,
											"end": 4110,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4110,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3979,
											"end": 4110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4138,
											"end": 4139,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4135,
											"end": 4136,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4140,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4120,
											"end": 4140,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4120,
											"end": 4140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 4146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 4146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 4146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 4146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 4146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4152,
											"end": 4343,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4152,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4196,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4212,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 4230,
											"end": 4231,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4212,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4212,
											"end": 4232,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4212,
											"end": 4232,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 4212,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4207,
											"end": 4232,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4207,
											"end": 4232,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4246,
											"end": 4266,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4264,
											"end": 4265,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4246,
											"end": 4266,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4246,
											"end": 4266,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4246,
											"end": 4266,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4246,
											"end": 4266,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4241,
											"end": 4266,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4241,
											"end": 4266,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4285,
											"end": 4286,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4282,
											"end": 4283,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4287,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4310,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 4276,
											"end": 4310,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4290,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 4290,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4290,
											"end": 4308,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4290,
											"end": 4308,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 4290,
											"end": 4308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4310,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 4276,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4336,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4332,
											"end": 4333,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4337,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4320,
											"end": 4337,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4320,
											"end": 4337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4152,
											"end": 4343,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4152,
											"end": 4343,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4152,
											"end": 4343,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4152,
											"end": 4343,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4152,
											"end": 4343,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4349,
											"end": 4445,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 4349,
											"end": 4445,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4386,
											"end": 4393,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4415,
											"end": 4439,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 4433,
											"end": 4438,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4415,
											"end": 4439,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4415,
											"end": 4439,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4415,
											"end": 4439,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 4415,
											"end": 4439,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4439,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4439,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4349,
											"end": 4445,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4349,
											"end": 4445,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4349,
											"end": 4445,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4349,
											"end": 4445,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4451,
											"end": 4541,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 4451,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4485,
											"end": 4492,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4533,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4534,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4535,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4503,
											"end": 4535,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4503,
											"end": 4535,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4451,
											"end": 4541,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4451,
											"end": 4541,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4451,
											"end": 4541,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4451,
											"end": 4541,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4547,
											"end": 4673,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4547,
											"end": 4673,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4584,
											"end": 4591,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4624,
											"end": 4666,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4617,
											"end": 4622,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4613,
											"end": 4667,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4602,
											"end": 4667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4602,
											"end": 4667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4673,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4673,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4673,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4679,
											"end": 4756,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4679,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4716,
											"end": 4723,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4745,
											"end": 4750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4734,
											"end": 4750,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4734,
											"end": 4750,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4679,
											"end": 4756,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4679,
											"end": 4756,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4679,
											"end": 4756,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4679,
											"end": 4756,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4762,
											"end": 4942,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4762,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4810,
											"end": 4887,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4807,
											"end": 4808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4800,
											"end": 4888,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4907,
											"end": 4911,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 4904,
											"end": 4905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4897,
											"end": 4912,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4931,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4928,
											"end": 4929,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4921,
											"end": 4936,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5128,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 4948,
											"end": 5128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4996,
											"end": 5073,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4993,
											"end": 4994,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4986,
											"end": 5074,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5093,
											"end": 5097,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 5090,
											"end": 5091,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5083,
											"end": 5098,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5117,
											"end": 5121,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5114,
											"end": 5115,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5107,
											"end": 5122,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5257,
											"end": 5374,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 5257,
											"end": 5374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5366,
											"end": 5367,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5363,
											"end": 5364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5356,
											"end": 5368,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5380,
											"end": 5600,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 5380,
											"end": 5600,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5520,
											"end": 5554,
											"name": "PUSH",
											"source": 2,
											"value": "596F7520686176656E2774207374616B656420616E7920636F696E7320796574"
										},
										{
											"begin": 5516,
											"end": 5517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5508,
											"end": 5514,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5504,
											"end": 5518,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5497,
											"end": 5555,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5592,
											"name": "PUSH",
											"source": 2,
											"value": "2E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5584,
											"end": 5586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5576,
											"end": 5582,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5572,
											"end": 5587,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5565,
											"end": 5593,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5380,
											"end": 5600,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5380,
											"end": 5600,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5606,
											"end": 5722,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5606,
											"end": 5722,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 5691,
											"end": 5696,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 5676,
											"end": 5697,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5676,
											"end": 5697,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 5676,
											"end": 5697,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5674,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5666,
											"end": 5698,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 5656,
											"end": 5716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5712,
											"end": 5713,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5709,
											"end": 5710,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5716,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 5656,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5606,
											"end": 5722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5606,
											"end": 5722,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5728,
											"end": 5850,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 5728,
											"end": 5850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5801,
											"end": 5825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 5819,
											"end": 5824,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5801,
											"end": 5825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 5801,
											"end": 5825,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5801,
											"end": 5825,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 5801,
											"end": 5825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5794,
											"end": 5799,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5791,
											"end": 5826,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5840,
											"end": 5841,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5837,
											"end": 5838,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5842,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5728,
											"end": 5850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5728,
											"end": 5850,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"harvest()": "4641257d",
							"stake(uint256)": "a694fc3a",
							"stakedAmount()": "373d6132",
							"unstake()": "2def6620"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakeTB.sol\":\"StakeTB\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"contracts/StakeTB.sol\":{\"keccak256\":\"0xd92960ed6496d34f317e4ed0027221e495f61efa36b7ae180f1127221292c511\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf3f4062ca8da3cc86c877060a6fc813ad2bbf2b4a0d5ba2d72e87aaa4f48821\",\"dweb:/ipfs/QmVbsJb5cSchUHReQXdzUhQn4uWGjPUtvLtFVg11zWReD6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 83,
								"contract": "contracts/StakeTB.sol:StakeTB",
								"label": "_token",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 88,
								"contract": "contracts/StakeTB.sol:StakeTB",
								"label": "_addressToToken",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(stakeInfo)100_storage)"
							},
							{
								"astId": 95,
								"contract": "contracts/StakeTB.sol:StakeTB",
								"label": "_rewardRatePerSecond",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(stakeInfo)100_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct StakeTB.stakeInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(stakeInfo)100_storage"
							},
							"t_struct(stakeInfo)100_storage": {
								"encoding": "inplace",
								"label": "struct StakeTB.stakeInfo",
								"members": [
									{
										"astId": 97,
										"contract": "contracts/StakeTB.sol:StakeTB",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 99,
										"contract": "contracts/StakeTB.sol:StakeTB",
										"label": "startTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "305:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "342:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:9:0"
									},
									"scope": 77,
									"src": "296:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "357:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "443:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "461:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "453:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:17:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "493:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:9:0"
									},
									"scope": 77,
									"src": "434:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "508:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "724:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "741:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "733:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "745:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:28:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "779:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:0"
									},
									"scope": 77,
									"src": "715:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "791:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1069:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1087:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1079:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1102:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1094:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:32:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1134:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:0"
									},
									"scope": 77,
									"src": "1060:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1149:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1805:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1821:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1813:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1838:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1830:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:33:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1864:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 43,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:6:0"
									},
									"scope": 77,
									"src": "1796:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1876:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2177:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2249:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2241:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:72:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2280:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2280:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2279:6:0"
									},
									"scope": 77,
									"src": "2168:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2292:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 67,
									"name": "Transfer",
									"nameLocation": "2461:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2486:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2470:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2508:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2492:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2520:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2512:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:57:0"
									},
									"src": "2455:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2533:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 76,
									"name": "Approval",
									"nameLocation": "2692:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2717:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2701:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2740:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2724:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2757:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2749:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:63:0"
									},
									"src": "2686:78:0"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"contracts/StakeTB.sol": {
				"ast": {
					"absolutePath": "contracts/StakeTB.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"StakeTB": [
							272
						]
					},
					"id": 273,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 273,
							"sourceUnit": 78,
							"src": "59:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 272,
							"linearizedBaseContracts": [
								272
							],
							"name": "StakeTB",
							"nameLocation": "126:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 83,
									"mutability": "mutable",
									"name": "_token",
									"nameLocation": "146:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 272,
									"src": "139:13:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 82,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 81,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "139:6:1"
										},
										"referencedDeclaration": 77,
										"src": "139:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 88,
									"mutability": "mutable",
									"name": "_addressToToken",
									"nameLocation": "188:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 272,
									"src": "158:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_stakeInfo_$100_storage_$",
										"typeString": "mapping(address => struct StakeTB.stakeInfo)"
									},
									"typeName": {
										"id": 87,
										"keyType": {
											"id": 84,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "166:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "158:29:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_stakeInfo_$100_storage_$",
											"typeString": "mapping(address => struct StakeTB.stakeInfo)"
										},
										"valueType": {
											"id": 86,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 85,
												"name": "stakeInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 100,
												"src": "177:9:1"
											},
											"referencedDeclaration": 100,
											"src": "177:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_stakeInfo_$100_storage_ptr",
												"typeString": "struct StakeTB.stakeInfo"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 95,
									"mutability": "mutable",
									"name": "_rewardRatePerSecond",
									"nameLocation": "217:20:1",
									"nodeType": "VariableDeclaration",
									"scope": 272,
									"src": "209:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 89,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "209:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										},
										"id": 94,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 90,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "240:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_10000000000000000_by_1",
												"typeString": "int_const 10000000000000000"
											},
											"id": 93,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 91,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "244:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3136",
												"id": 92,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "248:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_16_by_1",
													"typeString": "int_const 16"
												},
												"value": "16"
											},
											"src": "244:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000000000000000_by_1",
												"typeString": "int_const 10000000000000000"
											}
										},
										"src": "240:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "StakeTB.stakeInfo",
									"id": 100,
									"members": [
										{
											"constant": false,
											"id": 97,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "292:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 100,
											"src": "284:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 96,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "284:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 99,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "316:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 100,
											"src": "308:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 98,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "308:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "stakeInfo",
									"nameLocation": "265:9:1",
									"nodeType": "StructDefinition",
									"scope": 272,
									"src": "258:74:1",
									"visibility": "public"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "365:39:1",
										"statements": [
											{
												"expression": {
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 105,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "375:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 107,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 102,
																"src": "391:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 106,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "384:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "384:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "375:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "375:22:1"
											}
										]
									},
									"id": 112,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "358:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "350:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "350:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "349:15:1"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "365:0:1"
									},
									"scope": 272,
									"src": "338:66:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "448:446:1",
										"statements": [
											{
												"assignments": [
													119
												],
												"declarations": [
													{
														"constant": false,
														"id": 119,
														"mutability": "mutable",
														"name": "oldInfo",
														"nameLocation": "475:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 176,
														"src": "458:24:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stakeInfo_$100_memory_ptr",
															"typeString": "struct StakeTB.stakeInfo"
														},
														"typeName": {
															"id": 118,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 117,
																"name": "stakeInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 100,
																"src": "458:9:1"
															},
															"referencedDeclaration": 100,
															"src": "458:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakeInfo_$100_storage_ptr",
																"typeString": "struct StakeTB.stakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 124,
												"initialValue": {
													"baseExpression": {
														"id": 120,
														"name": "_addressToToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "485:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_stakeInfo_$100_storage_$",
															"typeString": "mapping(address => struct StakeTB.stakeInfo storage ref)"
														}
													},
													"id": 123,
													"indexExpression": {
														"expression": {
															"id": 121,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "501:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "501:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "485:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_stakeInfo_$100_storage",
														"typeString": "struct StakeTB.stakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "458:54:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 125,
															"name": "oldInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "526:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakeInfo_$100_memory_ptr",
																"typeString": "struct StakeTB.stakeInfo memory"
															}
														},
														"id": 126,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 97,
														"src": "526:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "543:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "526:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 144,
												"nodeType": "IfStatement",
												"src": "522:145:1",
												"trueBody": {
													"id": 143,
													"nodeType": "Block",
													"src": "545:122:1",
													"statements": [
														{
															"assignments": [
																130
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 130,
																	"mutability": "mutable",
																	"name": "rewardAmount",
																	"nameLocation": "567:12:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 143,
																	"src": "559:20:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 129,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "559:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 134,
															"initialValue": {
																"arguments": [
																	{
																		"id": 132,
																		"name": "oldInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 119,
																		"src": "593:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_stakeInfo_$100_memory_ptr",
																			"typeString": "struct StakeTB.stakeInfo memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_stakeInfo_$100_memory_ptr",
																			"typeString": "struct StakeTB.stakeInfo memory"
																		}
																	],
																	"id": 131,
																	"name": "calcReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "582:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_stakeInfo_$100_memory_ptr_$returns$_t_uint256_$",
																		"typeString": "function (struct StakeTB.stakeInfo memory) view returns (uint256)"
																	}
																},
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "582:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "559:42:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 138,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "631:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "631:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 140,
																		"name": "rewardAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 130,
																		"src": "643:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 135,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 83,
																		"src": "615:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 26,
																	"src": "615:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "615:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 142,
															"nodeType": "ExpressionStatement",
															"src": "615:41:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 148,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "718:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "718:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 152,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "738:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakeTB_$272",
																		"typeString": "contract StakeTB"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakeTB_$272",
																		"typeString": "contract StakeTB"
																	}
																],
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "730:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 150,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "730:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "730:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 154,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "745:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 145,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "698:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 58,
														"src": "698:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "698:54:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "698:54:1"
											},
											{
												"assignments": [
													159
												],
												"declarations": [
													{
														"constant": false,
														"id": 159,
														"mutability": "mutable",
														"name": "newInfo",
														"nameLocation": "779:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 176,
														"src": "762:24:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stakeInfo_$100_memory_ptr",
															"typeString": "struct StakeTB.stakeInfo"
														},
														"typeName": {
															"id": 158,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 157,
																"name": "stakeInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 100,
																"src": "762:9:1"
															},
															"referencedDeclaration": 100,
															"src": "762:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakeInfo_$100_storage_ptr",
																"typeString": "struct StakeTB.stakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 168,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 161,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "799:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"expression": {
																	"id": 162,
																	"name": "oldInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "808:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stakeInfo_$100_memory_ptr",
																		"typeString": "struct StakeTB.stakeInfo memory"
																	}
																},
																"id": 163,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 97,
																"src": "808:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "799:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 165,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "824:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "824:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 160,
														"name": "stakeInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "789:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_stakeInfo_$100_storage_ptr_$",
															"typeString": "type(struct StakeTB.stakeInfo storage pointer)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "789:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_stakeInfo_$100_memory_ptr",
														"typeString": "struct StakeTB.stakeInfo memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "762:78:1"
											},
											{
												"expression": {
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 169,
															"name": "_addressToToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "850:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_stakeInfo_$100_storage_$",
																"typeString": "mapping(address => struct StakeTB.stakeInfo storage ref)"
															}
														},
														"id": 172,
														"indexExpression": {
															"expression": {
																"id": 170,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "866:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "866:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "850:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stakeInfo_$100_storage",
															"typeString": "struct StakeTB.stakeInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 173,
														"name": "newInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "880:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stakeInfo_$100_memory_ptr",
															"typeString": "struct StakeTB.stakeInfo memory"
														}
													},
													"src": "850:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_stakeInfo_$100_storage",
														"typeString": "struct StakeTB.stakeInfo storage ref"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "850:37:1"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "419:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "433:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "425:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "424:16:1"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "448:0:1"
									},
									"scope": 272,
									"src": "410:484:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "926:168:1",
										"statements": [
											{
												"assignments": [
													182
												],
												"declarations": [
													{
														"constant": false,
														"id": 182,
														"mutability": "mutable",
														"name": "info",
														"nameLocation": "953:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 202,
														"src": "936:21:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stakeInfo_$100_memory_ptr",
															"typeString": "struct StakeTB.stakeInfo"
														},
														"typeName": {
															"id": 181,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 180,
																"name": "stakeInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 100,
																"src": "936:9:1"
															},
															"referencedDeclaration": 100,
															"src": "936:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakeInfo_$100_storage_ptr",
																"typeString": "struct StakeTB.stakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 187,
												"initialValue": {
													"baseExpression": {
														"id": 183,
														"name": "_addressToToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "960:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_stakeInfo_$100_storage_$",
															"typeString": "mapping(address => struct StakeTB.stakeInfo storage ref)"
														}
													},
													"id": 186,
													"indexExpression": {
														"expression": {
															"id": 184,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "976:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "976:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "960:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_stakeInfo_$100_storage",
														"typeString": "struct StakeTB.stakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "936:51:1"
											},
											{
												"assignments": [
													189
												],
												"declarations": [
													{
														"constant": false,
														"id": 189,
														"mutability": "mutable",
														"name": "rewardAmount",
														"nameLocation": "1005:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 202,
														"src": "997:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 188,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "997:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 193,
												"initialValue": {
													"arguments": [
														{
															"id": 191,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "1031:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakeInfo_$100_memory_ptr",
																"typeString": "struct StakeTB.stakeInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_stakeInfo_$100_memory_ptr",
																"typeString": "struct StakeTB.stakeInfo memory"
															}
														],
														"id": 190,
														"name": "calcReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "1020:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_stakeInfo_$100_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct StakeTB.stakeInfo memory) view returns (uint256)"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1020:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "997:39:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 197,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1062:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1062:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 199,
															"name": "rewardAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "1074:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 194,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "1046:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 26,
														"src": "1046:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1046:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "1046:41:1"
											}
										]
									},
									"functionSelector": "4641257d",
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "harvest",
									"nameLocation": "909:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "916:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:1"
									},
									"scope": 272,
									"src": "900:194:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "1173:100:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 211,
																	"name": "info",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 206,
																	"src": "1190:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stakeInfo_$100_memory_ptr",
																		"typeString": "struct StakeTB.stakeInfo memory"
																	}
																},
																"id": 212,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 97,
																"src": "1190:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 213,
																"name": "_rewardRatePerSecond",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "1204:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1190:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 215,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "1228:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "1228:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 217,
																			"name": "info",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 206,
																			"src": "1246:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_stakeInfo_$100_memory_ptr",
																				"typeString": "struct StakeTB.stakeInfo memory"
																			}
																		},
																		"id": 218,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "startTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 99,
																		"src": "1246:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1228:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 220,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1227:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1190:71:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3630",
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1264:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_60_by_1",
															"typeString": "int_const 60"
														},
														"value": "60"
													},
													"src": "1190:76:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 210,
												"id": 224,
												"nodeType": "Return",
												"src": "1183:83:1"
											}
										]
									},
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcReward",
									"nameLocation": "1109:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "info",
												"nameLocation": "1137:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "1120:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_stakeInfo_$100_memory_ptr",
													"typeString": "struct StakeTB.stakeInfo"
												},
												"typeName": {
													"id": 205,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 204,
														"name": "stakeInfo",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 100,
														"src": "1120:9:1"
													},
													"referencedDeclaration": 100,
													"src": "1120:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_stakeInfo_$100_storage_ptr",
														"typeString": "struct StakeTB.stakeInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1119:23:1"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "1165:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1165:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1164:9:1"
									},
									"scope": 272,
									"src": "1100:173:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "1305:209:1",
										"statements": [
											{
												"assignments": [
													231
												],
												"declarations": [
													{
														"constant": false,
														"id": 231,
														"mutability": "mutable",
														"name": "info",
														"nameLocation": "1332:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 258,
														"src": "1315:21:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stakeInfo_$100_memory_ptr",
															"typeString": "struct StakeTB.stakeInfo"
														},
														"typeName": {
															"id": 230,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 229,
																"name": "stakeInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 100,
																"src": "1315:9:1"
															},
															"referencedDeclaration": 100,
															"src": "1315:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakeInfo_$100_storage_ptr",
																"typeString": "struct StakeTB.stakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 236,
												"initialValue": {
													"baseExpression": {
														"id": 232,
														"name": "_addressToToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "1339:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_stakeInfo_$100_storage_$",
															"typeString": "mapping(address => struct StakeTB.stakeInfo storage ref)"
														}
													},
													"id": 235,
													"indexExpression": {
														"expression": {
															"id": 233,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1355:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1355:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1339:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_stakeInfo_$100_storage",
														"typeString": "struct StakeTB.stakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1315:51:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 238,
																	"name": "info",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "1384:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stakeInfo_$100_memory_ptr",
																		"typeString": "struct StakeTB.stakeInfo memory"
																	}
																},
																"id": 239,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 97,
																"src": "1384:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1398:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1384:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520686176656e2774207374616b656420616e7920636f696e73207965742e",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1401:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ccab2b4854c6e8fbd0d546923d213398c137f7cbe63c3f3d8dbdcabf0f35e942",
																"typeString": "literal_string \"You haven't staked any coins yet.\""
															},
															"value": "You haven't staked any coins yet."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ccab2b4854c6e8fbd0d546923d213398c137f7cbe63c3f3d8dbdcabf0f35e942",
																"typeString": "literal_string \"You haven't staked any coins yet.\""
															}
														],
														"id": 237,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1376:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1376:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "1376:61:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 248,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1464:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1464:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 250,
																	"name": "info",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "1476:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stakeInfo_$100_memory_ptr",
																		"typeString": "struct StakeTB.stakeInfo memory"
																	}
																},
																"id": 251,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 97,
																"src": "1476:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 253,
																		"name": "info",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 231,
																		"src": "1501:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_stakeInfo_$100_memory_ptr",
																			"typeString": "struct StakeTB.stakeInfo memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_stakeInfo_$100_memory_ptr",
																			"typeString": "struct StakeTB.stakeInfo memory"
																		}
																	],
																	"id": 252,
																	"name": "calcReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "1490:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_stakeInfo_$100_memory_ptr_$returns$_t_uint256_$",
																		"typeString": "function (struct StakeTB.stakeInfo memory) view returns (uint256)"
																	}
																},
																"id": 254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1490:16:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1476:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 245,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "1448:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 26,
														"src": "1448:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1448:59:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "1448:59:1"
											}
										]
									},
									"functionSelector": "2def6620",
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstake",
									"nameLocation": "1288:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1295:2:1"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1305:0:1"
									},
									"scope": 272,
									"src": "1279:235:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "1572:58:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 264,
															"name": "_addressToToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "1589:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_stakeInfo_$100_storage_$",
																"typeString": "mapping(address => struct StakeTB.stakeInfo storage ref)"
															}
														},
														"id": 267,
														"indexExpression": {
															"expression": {
																"id": 265,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1605:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1605:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1589:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stakeInfo_$100_storage",
															"typeString": "struct StakeTB.stakeInfo storage ref"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 97,
													"src": "1589:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 263,
												"id": 269,
												"nodeType": "Return",
												"src": "1582:41:1"
											}
										]
									},
									"functionSelector": "373d6132",
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakedAmount",
									"nameLocation": "1529:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1541:2:1"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1564:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1564:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1563:9:1"
									},
									"scope": 272,
									"src": "1520:110:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 273,
							"src": "117:1515:1",
							"usedErrors": []
						}
					],
					"src": "33:1599:1"
				},
				"id": 1
			}
		}
	}
}